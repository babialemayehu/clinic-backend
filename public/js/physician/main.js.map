{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/alert/alert.component.html","webpack:///./src/app/alert/alert.component.scss","webpack:///./src/app/alert/alert.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/card-title/card-title.component.html","webpack:///./src/app/card-title/card-title.component.scss","webpack:///./src/app/card-title/card-title.component.ts","webpack:///./src/app/change-password-route/change-password-route.component.html","webpack:///./src/app/change-password-route/change-password-route.component.scss","webpack:///./src/app/change-password-route/change-password-route.component.ts","webpack:///./src/app/change-password/change-password.component.html","webpack:///./src/app/change-password/change-password.component.scss","webpack:///./src/app/change-password/change-password.component.ts","webpack:///./src/app/change-password/validation.ts","webpack:///./src/app/context-menu/context-menu.component.html","webpack:///./src/app/context-menu/context-menu.component.scss","webpack:///./src/app/context-menu/context-menu.component.ts","webpack:///./src/app/context/context.component.html","webpack:///./src/app/context/context.component.scss","webpack:///./src/app/context/context.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/diagnosis/diagnosis.component.html","webpack:///./src/app/diagnosis/diagnosis.component.scss","webpack:///./src/app/diagnosis/diagnosis.component.ts","webpack:///./src/app/floating-action-btn/floating-action-btn.component.html","webpack:///./src/app/floating-action-btn/floating-action-btn.component.scss","webpack:///./src/app/floating-action-btn/floating-action-btn.component.ts","webpack:///./src/app/history-form/history-form.component.html","webpack:///./src/app/history-form/history-form.component.scss","webpack:///./src/app/history-form/history-form.component.ts","webpack:///./src/app/lab-responce/lab-responce.component.html","webpack:///./src/app/lab-responce/lab-responce.component.scss","webpack:///./src/app/lab-responce/lab-responce.component.ts","webpack:///./src/app/lab-result/lab-result.component.html","webpack:///./src/app/lab-result/lab-result.component.scss","webpack:///./src/app/lab-result/lab-result.component.ts","webpack:///./src/app/laboratory/laboratory.component.html","webpack:///./src/app/laboratory/laboratory.component.scss","webpack:///./src/app/laboratory/laboratory.component.ts","webpack:///./src/app/left-side/left-side.component.html","webpack:///./src/app/left-side/left-side.component.scss","webpack:///./src/app/left-side/left-side.component.ts","webpack:///./src/app/model/RootURL.ts","webpack:///./src/app/model/User.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/patient-search/patient-search.component.html","webpack:///./src/app/patient-search/patient-search.component.scss","webpack:///./src/app/patient-search/patient-search.component.ts","webpack:///./src/app/patinet-view/patinet-view.component.html","webpack:///./src/app/patinet-view/patinet-view.component.scss","webpack:///./src/app/patinet-view/patinet-view.component.ts","webpack:///./src/app/pharmacy/pharmacy.component.html","webpack:///./src/app/pharmacy/pharmacy.component.scss","webpack:///./src/app/pharmacy/pharmacy.component.ts","webpack:///./src/app/prescription/prescription.component.html","webpack:///./src/app/prescription/prescription.component.scss","webpack:///./src/app/prescription/prescription.component.ts","webpack:///./src/app/queue-min/queue-min.component.html","webpack:///./src/app/queue-min/queue-min.component.scss","webpack:///./src/app/queue-min/queue-min.component.ts","webpack:///./src/app/queue/queue-datasource.ts","webpack:///./src/app/queue/queue.component.css","webpack:///./src/app/queue/queue.component.html","webpack:///./src/app/queue/queue.component.ts","webpack:///./src/app/recent-visits/recent-visits.component.html","webpack:///./src/app/recent-visits/recent-visits.component.scss","webpack:///./src/app/recent-visits/recent-visits.component.ts","webpack:///./src/app/registeration-form/registeration-form.component.html","webpack:///./src/app/registeration-form/registeration-form.component.scss","webpack:///./src/app/registeration-form/registeration-form.component.ts","webpack:///./src/app/room-number/room-number.component.html","webpack:///./src/app/room-number/room-number.component.scss","webpack:///./src/app/room-number/room-number.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/saved-states/saved-states.component.html","webpack:///./src/app/saved-states/saved-states.component.scss","webpack:///./src/app/saved-states/saved-states.component.ts","webpack:///./src/app/service/common-message.service.ts","webpack:///./src/app/service/hisstory.service.ts","webpack:///./src/app/service/laboratory.service.ts","webpack:///./src/app/service/patient-queue.service.ts","webpack:///./src/app/service/patient.service.ts","webpack:///./src/app/service/pharmacy.service.ts","webpack:///./src/app/service/role.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/setup-dialog/setup-dialog.component.html","webpack:///./src/app/setup-dialog/setup-dialog.component.scss","webpack:///./src/app/setup-dialog/setup-dialog.component.ts","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.scss","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/app/start/start.component.html","webpack:///./src/app/start/start.component.scss","webpack:///./src/app/start/start.component.ts","webpack:///./src/app/upload_profile_pic/route/route.component.html","webpack:///./src/app/upload_profile_pic/route/route.component.scss","webpack:///./src/app/upload_profile_pic/route/route.component.ts","webpack:///./src/app/upload_profile_pic/upload/upload.component.html","webpack:///./src/app/upload_profile_pic/upload/upload.component.scss","webpack:///./src/app/upload_profile_pic/upload/upload.component.ts","webpack:///./src/app/user-profile-modal/user-profile-modal.component.html","webpack:///./src/app/user-profile-modal/user-profile-modal.component.scss","webpack:///./src/app/user-profile-modal/user-profile-modal.component.ts","webpack:///./src/app/user-profile-route/user-profile-route.component.html","webpack:///./src/app/user-profile-route/user-profile-route.component.scss","webpack:///./src/app/user-profile-route/user-profile-route.component.ts","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.scss","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user-table/user-table-datasource.ts","webpack:///./src/app/user-table/user-table.component.html","webpack:///./src/app/user-table/user-table.component.scss","webpack:///./src/app/user-table/user-table.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/view-hisstory/view-hisstory.component.html","webpack:///./src/app/view-hisstory/view-hisstory.component.scss","webpack:///./src/app/view-hisstory/view-hisstory.component.ts","webpack:///./src/app/visits/visits-datasource.ts","webpack:///./src/app/visits/visits.component.css","webpack:///./src/app/visits/visits.component.html","webpack:///./src/app/visits/visits.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/lib/context-menu-injector.ts","webpack:///./src/lib/context-menu-trigger.directive.ts","webpack:///./src/lib/context-menu.module.ts","webpack:///./src/lib/context-menu.service.ts","webpack:///./src/lib/context-submenu-trigger.directive.ts","webpack:///./src/lib/menu.component.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"head-color {{data.color}}\\\" ></div>\\n<div class=\\\"container\\\" style=\\\"width: 400px; padding: 0px 10% 0px 10%;\\\"> \\n  <h5 style=\\\"margin-top: 0px\\\">{{data.title}}</h5> \\n  <p [innerHTML]=\\\"data.message\\\"></p>\\n  \\n  <strong>\\n    <button (click)=\\\"confirm()\\\" mat-button class=\\\"right white black-text \\\">OK</button>\\n    <button *ngIf=\\\"data.dialog == 'confirm'\\\" (click)=\\\"close()\\\" mat-button class=\\\"right white black-text \\\">CANCLE</button>\\n  </strong>\\n\\n</div> \"","module.exports = \".head-color {\\n  position: relative;\\n  width: 100%;\\n  height: 5px;\\n  background-color: red;\\n  top: -24px; }\\n\\n.mat-icon {\\n  font-size: 18px;\\n  width: 18px;\\n  height: 18px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor(\n    public thisDialog: MatDialogRef<AlertComponent>, \n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n  }\n\n  close(){\n    this.thisDialog.close(\n      {\n      responce: false, \n      data: null\n    }); \n  }\n  confirm(){\n    this.thisDialog.close(\n      {\n        responce: true, \n        data: this.data.data\n      }\n    ); \n  }\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<app-sidenav [$auth]=\\\"$auth\\\" [profilePic]=\\\"profilePic\\\"></app-sidenav>\\n<!-- <app-context></app-context> -->\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material'; \nimport { User } from './model/User'; \nimport { UserService } from './service/user.service';\nimport { SetupDialogComponent } from './setup-dialog/setup-dialog.component'; \n\ndeclare var M; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'admin2';\n  private $auth: User; \n  private profilePic: string; \n\n  constructor(public _dialog: MatDialog, public _user: UserService) { }\n\n  ngOnInit(){\n    document.addEventListener('DOMContentLoaded', function() {\n      M.AutoInit(); \n    });\n   \n    this._user.authUser().subscribe(\n      result => {\n        this.$auth = result; \n        this.profilePic = result.profile_pic;\n        if(result.setup_step >= 0){\n          this._dialog.open(SetupDialogComponent, {\n            width: '400px', \n            data: {\n              step: result.setup_step, \n              disableClose: true\n            }\n          });\n        }\n      }\n    );   \n  }\n    \n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { appRoutes } from './routes'; \n\nimport 'materialize-css'; \nimport 'string';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms'; \nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router'; \n\nimport { MatInputModule} from '@angular/material/input';\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { FloatingActionBtnComponent } from './floating-action-btn/floating-action-btn.component';\nimport { RegisterationFormComponent } from './registeration-form/registeration-form.component';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport { AlertComponent } from './alert/alert.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { \n  MatButtonModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatMenuModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule, \n  MatDialogModule,  \n  MatSelectModule, \n  MatAutocompleteModule, \n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatChipsModule, \n} from '@angular/material';\nimport { UsersComponent } from './users/users.component';\n\n// SERVICE PROVIDERS\nimport { UserService } from './service/user.service';\nimport { UserTableComponent } from './user-table/user-table.component';\n\n// context menu\nimport { ContextComponent } from './context/context.component';\n// import { ContextMenu } from './context/context.menu';\nimport { ContextMenuModule } from '../lib/context-menu.module';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UserProfileModalComponent } from './user-profile-modal/user-profile-modal.component';\nimport { UserProfileRouteComponent } from './user-profile-route/user-profile-route.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ChangePasswordRouteComponent } from './change-password-route/change-password-route.component';\nimport { PatientSearchComponent } from './patient-search/patient-search.component';\nimport { PatinetViewComponent } from './patinet-view/patinet-view.component';\nimport { RecentVisitsComponent } from './recent-visits/recent-visits.component';\nimport { CardTitleComponent } from './card-title/card-title.component';\nimport { QueueMinComponent } from './queue-min/queue-min.component';\nimport { QueueComponent } from './queue/queue.component';\nimport { VisitsComponent } from './visits/visits.component';\nimport { SetupDialogComponent } from './setup-dialog/setup-dialog.component';\nimport { UploadComponent } from './upload_profile_pic/upload/upload.component';\nimport { RouteComponent } from './upload_profile_pic/route/route.component';\nimport { RoomNumberComponent } from './room-number/room-number.component';\nimport { HistoryFormComponent } from './history-form/history-form.component';\nimport { LaboratoryComponent } from './laboratory/laboratory.component';\nimport { PharmacyComponent } from './pharmacy/pharmacy.component';\nimport { LabResponceComponent } from './lab-responce/lab-responce.component';\nimport { LeftSideComponent } from './left-side/left-side.component';\nimport { SavedStatesComponent } from './saved-states/saved-states.component';\nimport { DiagnosisComponent } from './diagnosis/diagnosis.component';\nimport { ViewHisstoryComponent } from './view-hisstory/view-hisstory.component';\nimport { LabResultComponent } from './lab-result/lab-result.component';\nimport { PrescriptionComponent } from './prescription/prescription.component';\nimport { StartComponent } from './start/start.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidenavComponent,\n    FloatingActionBtnComponent,\n    RegisterationFormComponent,\n    AlertComponent,\n    DashboardComponent,\n    UsersComponent,\n    UserTableComponent,\n    ContextComponent,\n    ContextMenuComponent,\n    UserProfileComponent,\n    UserProfileModalComponent,\n    UserProfileRouteComponent,\n    SettingsComponent,\n    ChangePasswordComponent,\n    ChangePasswordRouteComponent,\n    PatientSearchComponent,\n    PatinetViewComponent,\n    RecentVisitsComponent,\n    CardTitleComponent,\n    QueueMinComponent,\n    QueueComponent,\n    VisitsComponent,\n    SetupDialogComponent,\n    UploadComponent,\n    RouteComponent,\n    RoomNumberComponent,\n    HistoryFormComponent,\n    LaboratoryComponent,\n    PharmacyComponent,\n    LabResponceComponent,\n    LeftSideComponent,\n    SavedStatesComponent,\n    DiagnosisComponent,\n    ViewHisstoryComponent,\n    LabResultComponent,\n    PrescriptionComponent,\n    StartComponent,\n   \n    // ContextMenu,\n  ],\n  imports: [\n    BrowserModule, \n    ReactiveFormsModule, \n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatButtonModule, \n    MatCheckboxModule, \n    MatInputModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule, \n    MatDialogModule, \n    MatSelectModule,\n    MatAutocompleteModule,\n    ContextMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n  ],\n  entryComponents: [\n    RegisterationFormComponent, \n    AlertComponent, \n    // ContextMenu, \n    ContextMenuComponent,\n    UserProfileModalComponent,\n    SetupDialogComponent,\n    DiagnosisComponent\n\n  ], \n  providers: [\n    UserService, \n  ],\n  bootstrap: [AppComponent]\n}) \nexport class AppModule { }\n","module.exports = \"<div class=\\\"contain\\\">\\n  <div class=\\\"titel\\\"> <strong><b>{{_titel}}</b></strong></div>\\n  <div class=\\\"icon\\\">\\n    <mat-icon \\n    (click)=\\\"action()\\\" \\n    mat-icon-button \\n    [matMenuTriggerFor]=\\\"appMenu\\\"\\n    style=\\\"font-size: 18px;width: 18px;height: 18px;cursor: pointer;\\\">\\n      {{_icon}}\\n    </mat-icon>\\n  </div>\\n  <mat-menu #appMenu=\\\"matMenu\\\">\\n    <button mat-menu-item \\n    *ngFor=\\\"let option of options\\\"\\n    (click)=\\\"select(option.value)\\\"\\n    class=\\\"option\\\">\\n      <mat-icon class=\\\"option-icon\\\" *ngIf=\\\"option.icon != ''\\\">{{option.icon}}</mat-icon>\\n      <span>{{option.text}}</span>\\n    </button>\\n  </mat-menu>\\n</div>\"","module.exports = \".contain {\\n  width: 100%; }\\n\\n.titel {\\n  display: inline-flex;\\n  width: 90%; }\\n\\n.icon {\\n  display: inline-flex;\\n  width: 10%; }\\n\\n.option {\\n  cursor: pointer; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ICON_REGISTRY_PROVIDER } from '@angular/material';\nimport { Options } from '../model/Options'; \n\n@Component({\n  selector: 'app-card-title',\n  templateUrl: './card-title.component.html',\n  styleUrls: ['./card-title.component.scss']\n})\n\nexport class CardTitleComponent implements OnInit {\n\n  private _titel: string; \n  private _icon = \"more_vert\"; \n\n  @Input() \n  set titel(val){\n    this._titel = val; \n  }\n\n  @Input() \n  set icon(val){\n    this._icon = val; \n  }\n\n  @Input() options: Options[]; \n  @Output() onClick = new EventEmitter(); \n  @Output() onSelect = new EventEmitter(); \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  action(){\n    this.onClick.emit(); \n  }\n\n  select(value){\n    this.onSelect.emit(value); \n  }\n}\n","module.exports = \"<section class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 m6 l6 offset-m3 offset-l3\\\">\\n        <mat-card class=\\\"form-container\\\" >\\n          <app-change-password (stauts)=\\\"onStatusChange($event)\\\"></app-change-password>\\n        </mat-card>\\n    </div>\\n  </div>\\n</section>\"","module.exports = \".mat-card {\\n  margin-top: 10%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-change-password-route',\n  templateUrl: './change-password-route.component.html',\n  styleUrls: ['./change-password-route.component.scss']\n})\nexport class ChangePasswordRouteComponent implements OnInit {\n\n  constructor(public _route: Router) { }\n\n  ngOnInit() {\n  }\n  onStatusChange(status){\n    if(status){\n      this._route.navigate(['/settings']);\n    } \n  }\n}\n","module.exports = \"<div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n  <div class=\\\"indeterminate\\\"></div>\\n</div>\\n<section>\\n  <h5>Change password</h5>\\n  <form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n    <mat-form-field *ngIf=\\\"!hideCurrentP\\\">\\n      <input matInput placeholder=\\\"Current password\\\" (focusout)=\\\"checkPassword()\\\"  type=\\\"password\\\" formControlName=\\\"current_password\\\"> \\n      <mat-error *ngIf=\\\"current_password.errors?.required && current_password.touched\\\">\\n        This field is required\\n      </mat-error>\\n      <mat-error *ngIf=\\\"current_password.errors?.invalidPassword && current_password.touched\\\">\\n        This is invalid password\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"New password\\\"  type=\\\"password\\\" formControlName=\\\"new_password\\\"> \\n      <mat-error *ngIf=\\\"new_password.errors?.required && new_password.touched\\\">\\n        This field is required\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Confirm password\\\"  type=\\\"password\\\" formControlName=\\\"confirm_password\\\"> \\n      <mat-error *ngIf=\\\"confirm_password.errors?.required && confirm_password.touched\\\">\\n        This field is required\\n      </mat-error>\\n    \\n      <mat-error *ngIf=\\\"confirm_password.errors?.confimation && confirm_password.touched\\\">\\n        Password don't match \\n      </mat-error>\\n    </mat-form-field>\\n    <button mat-button [disabled]='changePasswordForm.invalid' type=\\\"submit\\\" color=\\\"primary\\\" class=\\\"right\\\">CHANGE</button>\\n  </form>\\n\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators }  from '@angular/forms';\nimport { confirmValidator } from './validation'; \nimport { UserService } from '../service/user.service'; \nimport { CommonMessageService } from '../service/common-message.service'; \n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  changePasswordForm: FormGroup;\n  hideCurrentP = false; \n  loading = false;\n  @Output() stauts = new EventEmitter<boolean>()\n\n  @Input() set setOnly(i){\n    this.hideCurrentP = i; \n    if(i === true){\n      this.changePasswordForm = this.formBuilder.group({\n        new_password: ['', [Validators.min(6),Validators.required]], \n        confirm_password: ['',[confirmValidator, Validators.required]],\n      });\n    } \n  }\n  constructor(\n    public formBuilder: FormBuilder, \n    public _user: UserService, \n    public _message: CommonMessageService) { }\n\n  ngOnInit() {\n    this.changePasswordForm = this.formBuilder.group({\n      current_password: ['', [Validators.min(6),Validators.required]], \n      new_password: ['', [Validators.min(6),Validators.required]], \n      confirm_password: ['',[confirmValidator, Validators.required]],\n    });\n\n    this.changePasswordForm.controls.new_password.valueChanges\n    .subscribe(\n      x => { this.changePasswordForm.controls.confirm_password.updateValueAndValidity(); }\n    )\n  } \n  checkPassword(){\n    this._user.currentPassword(this.changePasswordForm.controls.current_password.value)\n    .subscribe(\n      responce => {}, \n      error => {\n        if(error.status == 406)\n          this.changePasswordForm.controls.current_password.setErrors({invalidPassword: true}); \n      },\n    ); \n  }\n  confirm(confirm: FormControl){\n    \n    const newPass = this.changePasswordForm.value.new_password; \n    if(newPass == confirm.value){\n      return ({validConfirm_password: true});\n    } else {\n      return (null);\n    }\n  }\n  onSubmit(){\n    this.loading = true; \n    let form = this.changePasswordForm.controls; \n    this._user.changePassword(form.current_password.value, form.new_password.value)\n    .subscribe(\n      restponce=> {\n        this.loading = false; \n        this._message.httpSuccess('Changed your password'); \n        this.stauts.emit(true); \n      },\n      error => {\n        this.loading = false; \n        this._message.httpError(error);\n        if(error.status == 406){\n          this.changePasswordForm.controls.current_password.setErrors({invalidPassword: true});\n        } \n        this.stauts.emit(false); \n      }\n    ); \n  }\n  get current_password(){ return this.changePasswordForm.get('current_password')}\n  get new_password(){ return this.changePasswordForm.get('new_password')}\n  get confirm_password(){ return this.changePasswordForm.get('confirm_password')}\n}\n","import { AbstractControl } from '@angular/forms'; \nimport { UserService } from '../service/user.service'; \nimport { HttpClient } from '@angular/common/http';\n\n\nexport function confirmValidator(control: AbstractControl){\n    if(control.value !== '' && (control.value !== null || control.value !== undefined)){\n        let password = control.root.get('new_password'); \n        if(control.value != password.value){\n            return {confimation: true}; \n        };\n    }\n    return null;    \n}\n","module.exports = \"<mat-card [@menu]=\\\"_state\\\" (@menu.done)=\\\"_onAnimationDone($event)\\\" style=\\\"cursor: pointer;\\\">\\n    <mat-list>\\n        <mat-list-item *ngFor=\\\"let item of items.items;let i=index\\\" \\n        (click)=\\\"onClick({index:i,data:items.data})\\\">\\n            <i class=\\\"icon small material-icons\\\" [class.danger-text]='item.icon == \\\"delete\\\"'>{{item.icon}}</i>\\n            <span class=\\\"text\\\">{{item.text}}</span>\\n        </mat-list-item>\\n    </mat-list>\\n</mat-card>\"","module.exports = \".mat-card {\\n  padding: 0px;\\n  padding-bottom: 1em;\\n  padding-top: 1em;\\n  width: 180px; }\\n  .mat-card .mat-list-item-content {\\n    height: 30px;\\n    padding-top: 4px;\\n    padding-bottom: 4px; }\\n  .mat-card .mat-list-item:hover {\\n    background: #eeeeee; }\\n  .mat-card .icon {\\n    padding: 5px;\\n    font-size: 1.5rem;\\n    opacity: .8; }\\n  .mat-card .text {\\n    margin-left: 1.2em;\\n    font-size: 1em; }\\n  .mat-card .mat-list {\\n    padding-top: 0px; }\\n\"","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component } from '@angular/core';\n\nimport { ContextMenuService } from '../../lib/context-menu.service';\nimport { MenuPackage } from '../../lib/context-menu-injector';\nimport { MenuComponent } from '../../lib/menu.component';\n\n@Component({\n  selector: 'app-context-menu',\n  templateUrl: './context-menu.component.html',\n  styleUrls: ['./context-menu.component.scss'],\n  animations: [\n    trigger('menu', [\n      state(\n        'enter',\n        style({ opacity: 1, marginTop: '0px', visibility: 'visible' }),\n      ),\n      state('exit, void', style({ opacity: 0, marginTop: '-15px' })),\n      transition('* => *', animate('120ms ease-in')),\n    ]),\n  ],\n  host: {\n    '[@menu]': '_state',\n    '(@menu.done)': '_onAnimationDone($event)',\n  }\n})\nexport class ContextMenuComponent extends MenuComponent {\n  public items; \n  constructor(\n    public menuPackage: MenuPackage,\n    public contextMenuService: ContextMenuService,\n  ) {\n    super(menuPackage, contextMenuService);\n    this.items = menuPackage.context;\n  }\n\n  onClick(e) {\n    // console.log(e); \n    this.contextMenuService.closeAll(e);  \n  }\n\n}\n","module.exports = \"<p class=\\\"text-center\\\">Right click to see menu</p>\\n<div class=\\\"d-flex flex-row justify-content-around bd-highlight\\\">\\n  <div class=\\\"p-4 p-md-5 bd-highlight bg-light border rounded target\\\"\\n    [contextMenuTrigger]=\\\"menu\\\" \\n    [menuContext]=\\\"items\\\"\\n    (menuAction)=\\\"handleClose('this si firm menu')\\\" class='card' >\\n    Basic Menu\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ContextMenuComponent } from '../context-menu/context-menu.component'; \n\n@Component({\n  selector: 'app-context',\n  templateUrl: './context.component.html',\n  styleUrls: ['./context.component.scss']\n})\nexport class ContextComponent implements OnInit {\n\n  menu = ContextMenuComponent; \n  items: [\n    {icon:'', text: 'baseline' },\n    {icon:'build', text: 'build' },\n    {icon:'backup', text: 'backup' },\n    {icon:'adb', text: 'backup' },\n    {icon:'add', text: 'backup' }\n  ];\n  constructor() { }\n  ngOnInit() {\n    \n  }\n  handleClose(e) {\n    console.log('laskdfjlasdkf'); \n  }\n}\n","module.exports = \"<section>\\n <div class=\\\"row\\\">\\n   <div class=\\\"col m4 l3 s12\\\">\\n      <mat-card id=\\\"queue\\\">\\n        <app-queue-min [loadTriggr]=\\\"update.queue\\\"></app-queue-min>\\n      </mat-card>\\n   </div>\\n   <div class=\\\"col m8 l9 s12\\\">  \\n     <div id=\\\"show-area\\\">\\n<!-- STATE 0 -->\\n       <section *ngIf=\\\"state == 0\\\">\\n        <mat-card style=\\\"margin: 10%\\\">\\n          <div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n            <div class=\\\"indeterminate\\\"></div>\\n          </div>\\n          <div [class.form-loading]=\\\"loading\\\">\\n            <h3 class=\\\"center\\\">Wellcome</h3>\\n            <h6 class=\\\"center\\\">Do you want to start treatement?</h6>\\n            <br>\\n            <div style=\\\"width: 80%; margin:auto\\\">\\n              <app-room-number \\n              (status)=\\\"onStatus($event)\\\" \\n              [roomNumber]=\\\"($auth)?.room_number\\\"\\n              ></app-room-number>           \\n            </div>\\n            \\n            <div style=\\\"width: 100%; text-align: center;\\\">\\n              <button mat-flat-button color=\\\"primary\\\" (click)=\\\"next()\\\">Start</button>\\n            </div>\\n          </div> \\n        </mat-card>\\n       </section>\\n<!-- STATE 1 -->\\n       <section *ngIf=\\\"state == 1\\\">\\n         <div class=\\\"row\\\">\\n           <div class=\\\"col m7 s12\\\">\\n            <mat-card>\\n              <app-patinet-view [patient]=\\\"patient\\\"></app-patinet-view>\\n            </mat-card>\\n          </div>\\n          <div class=\\\"col m5 s12\\\">\\n            <mat-card>\\n              <app-recent-visits [patient]=\\\"patient\\\" icon=\\\"launch\\\"></app-recent-visits>\\n            </mat-card>\\n          </div>\\n         </div>    \\n          <mat-card class=\\\"row\\\">\\n            <app-history-form [hisstory]=\\\"hisstory\\\" ></app-history-form>\\n            <div class=\\\"row\\\" id=\\\"buttons\\\">    \\n              <!-- <button mat-stroked-button (click)=\\\"next()\\\" color=\\\"priamry\\\" class=\\\"right\\\"><span>Next </span> <mat-icon>navigate_next</mat-icon></button> -->\\n              <button mat-flat-button (click)=\\\"finish()\\\" color=\\\"primary\\\" class=\\\"right\\\">Finish</button>  \\n            </div>\\n          </mat-card> \\n       </section>\\n<!-- STATE 2    -->\\n       <section *ngIf=\\\"state == 2\\\">\\n          <button mat-icon-button>\\n            <mat-icon (click)=\\\"$back()\\\">arrow_back</mat-icon>\\n          </button>\\n          <app-laboratory [queue]=\\\"$queue\\\" ></app-laboratory> \\n       </section>\\n<!-- STATE 3 -->\\n       <section *ngIf=\\\"state == 3\\\">\\n          <button mat-icon-button>\\n            <mat-icon (click)=\\\"$back()\\\">arrow_back</mat-icon>\\n          </button>\\n          <app-pharmacy [queue]=\\\"$queue\\\" (status)=\\\"$state($event) \\\"></app-pharmacy>\\n       </section>\\n<!-- STATE 5  -->\\n       <section *ngIf=\\\"state == 5\\\">\\n          <mat-card style=\\\"margin: 15%;\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"center\\\" style=\\\"width: 100%; opacity: 0.8\\\">\\n                    <h6><strong class=\\\"secondery center\\\">\\n                      <B>There is no patient in the queue. <br>You will be notified when new patient arrived</B>\\n                    </strong></h6>\\n                    \\n                  </div>\\n              </div>\\n            </div>\\n          </mat-card>\\n       </section>\\n<!-- STATE 6  -->\\n      <section *ngIf=\\\"state == 6\\\">\\n          <mat-card style=\\\"margin: 15%;\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"center\\\" style=\\\"width: 100%; opacity: 0.8\\\">\\n                  <h6><strong class=\\\"secondery center\\\">\\n                    <B>New patient arrived</B>\\n                  </strong></h6>\\n                </div>\\n              </div>\\n              <div class=\\\" center\\\">\\n                <button mat-flat-button (click)=\\\"next()\\\">Accept</button> \\n              </div>\\n            </div>\\n          </mat-card>\\n      </section>\\n<!-- STATE 7  -->\\n    <section *ngIf=\\\"state == 7\\\">\\n      <mat-card style=\\\"margin: 15%;\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"center\\\" style=\\\"width: 100%; opacity: 0.8\\\">\\n                <h6><strong class=\\\"secondery center\\\">\\n                  <B>You have finished all of your cases <br><span class=\\\"small\\\">Plase click next if you want to accept another patient</span></B>\\n                </strong></h6>\\n                \\n              </div>\\n          </div>\\n          <div class=\\\" center\\\">\\n            <button mat-flat-button color=\\\"primary\\\" (click)=\\\"next()\\\">next <mat-icon>navigate_next</mat-icon></button> \\n          </div>\\n        </div>\\n      </mat-card>\\n    </section>\\n     </div> \\n   </div>\\n </div>\\n</section>\\n<div [hidden]=\\\"state == 0 || state == 5\\\">\\n  <app-floating-action-btn (action)=\\\"$state($event)\\\" ></app-floating-action-btn>\\n</div>\\n<app-saved-states \\n[activeQueueId]=\\\"($queue)?.id\\\"\\n[update] = 'update.states'\\n[next] = 'update.stateNext'\\n(open) = \\\"open($event)\\\"\\n></app-saved-states>\"","module.exports = \".no-search {\\n  margin-top: 15%; }\\n\\n.patinet-search {\\n  margin-bottom: 24px; }\\n\\n@media screen and (min-width: 910px) {\\n    .patinet-search .search {\\n      width: 70%; } }\\n\\n.mat-card {\\n  padding: 5% 7%; }\\n\\n.mat-button {\\n  margin-left: 24px;\\n  font-weight: 550; }\\n\\n.mat-button[disabled] {\\n  opacity: 0.7;\\n  background-color: #ddd;\\n  cursor: not-allowed; }\\n\\nsection .mat-card {\\n  margin-bottom: 8px; }\\n\\n#buttons button, #buttons a {\\n  margin-right: 8px; }\\n\\n@media screen and (min-width: 910px) {\\n  #show-area {\\n    width: 80%;\\n    margin: auto; } }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Patient } from '../model/Patient'; \nimport { PatientQueueService } from '../service/patient-queue.service'; \nimport { Patient_queue } from '../model/Patient_queue'; \nimport { RegisterationFormComponent } from '../registeration-form/registeration-form.component'; \nimport { MatDialog, throwMatDuplicatedDrawerError } from '@angular/material'; \nimport { PatientService } from '../service/patient.service'; \nimport { AlertComponent } from '../alert/alert.component'; \nimport { Router, ActivatedRoute} from '@angular/router'; \nimport { User } from '../model/User';\nimport { Hisstory } from '../model/Hisstory'; \nimport { UserService } from '../service/user.service';\nimport { DiagnosisComponent } from '../diagnosis/diagnosis.component';\nimport { HisstoryService } from '../service/hisstory.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  private state: number = 0; \n  private patient: Patient; \n  private $queue: Patient_queue; \n  private isQueued: boolean; \n  private load: number = 0; \n  private $auth: User; \n  private loading: boolean = false; \n  private hisstory: Hisstory; \n  private queueChecker;\n\n  private update = {\n    state: 0, \n    queue: 0, \n    stateNext: 0\n  }; \n  constructor(\n    private _queue: PatientQueueService,\n    private _patient: PatientService, \n    private _user: UserService, \n    private _router: Router, \n    private _activeRoute: ActivatedRoute,\n    private _dialog: MatDialog, \n    private _hisstory: HisstoryService\n  ) { }\n\n  ngOnInit() {\n    this._user.authUser().subscribe(\n      (user) => {\n        this.$auth = user; \n      }\n    ); \n\n    this._activeRoute.params.subscribe(\n      (param) =>{\n        if(typeof param.hisstory_id !== 'undefined'){\n          this._queue.getQueue(param.hisstory_id).subscribe(\n            (responce)=> {\n              this.loading = false; \n              this.open(responce); \n            }\n          ); \n        }\n      }\n    )\n  }\n\n  next(){\n    this.loading  = true; \n    this._queue.next().subscribe(\n      (responce) => {\n        this.loading = false;\n        this.open(responce); \n      }, \n      (error) => {\n        this.loading = false; \n        this.state = 5; \n        this.queueChecker = setInterval(()=>{\n          this._queue.isEmpty().subscribe(\n            (isEmpty) => {\n              this.state = (isEmpty == true)?5:6; \n            }\n          )\n        }, 10000); \n      }\n    )\n    this.update.state++;\n    this.update.queue++;  \n  }\n\n  open(queue: Patient_queue){\n    if(this.queueChecker != undefined) \n      clearInterval(this.queueChecker); \n    if(queue){\n      this.patient = queue.patient; \n      this.$queue = queue; \n      this.hisstory = queue.hisstory; \n      this.state = 1; \n    }else{\n      this.state = 7; \n    }\n    \n  }\n\n  call(){\n    this._queue.call(this.$queue.id).subscribe(\n      (Response) => {}\n    )\n  }\n  $state(num: number){ \n    switch(num){\n      case 1: \n        this.next(); \n      break; \n      case 4: \n        this.call(); \n      break; \n      default: \n      this.state = num; \n    }\n   }\n\n  finish(){\n    let dialogRef = this._dialog.open(DiagnosisComponent, {\n      width: \"600px\",\n      disableClose: true, \n      data: {\n        queue: this.$queue\n      }\n    }); \n\n    dialogRef.afterClosed().subscribe(\n      (response) => {\n        switch(response){\n          case 'next': \n            this.next(); \n            break; \n          case 'finish': \n            this._hisstory.close(this.$queue.id).subscribe(\n              response => {\n                this.update.stateNext++;\n              }\n            )\n            break; \n        } \n      }\n    )\n  }\n  $back(){ this.state = 1; }\n\n  onSearch(patient) {\n    this.patient = patient; \n    this._queue.isQueued(patient.id).subscribe(\n      (responce) => { \n          this.isQueued =(responce > 0);\n          this.load++; \n      }\n    )\n  }\n\n  queue(){\n    this._queue.queue(this.patient.id).subscribe(\n      (patient) => {\n        this.isQueued = true; \n        this.load++; \n      }\n    )\n  }\n\n  dequeue(){\n    this._queue.remove(this.patient.id).subscribe(\n      (responce) => {\n        this.isQueued = false; \n        this.load++; \n      }\n    ); \n  }\n\n  edit(){\n  \n    let patinetDialog = this._dialog.open(RegisterationFormComponent, {\n      width: \"600px\", \n      data:{\n        patient: this.patient\n      } \n    }); \n\n    patinetDialog.afterClosed().subscribe(\n      (responce) => {\n        this.patient = responce.data;  \n      }\n    ); \n  }\n\n  delete(){\n    let message = \"Are you sure u want to delete <b> \" + this.patient.first_name + \"</b>\"; \n    let alert = this._dialog.open(AlertComponent, {\n      width: '400px', \n      data: {\n        title: \"Confirm\",\n        color: \"yellow\",\n        message:  message, \n        dialog: 'confirm',\n      }\n    })\n    alert.afterClosed().subscribe(\n      (responce) => {\n        if(responce.responce){\n          this._patient.delete(this.patient.id).subscribe(); \n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"<section class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <h5>Diagnosis</h5>\\n    <div class=\\\"row\\\">\\n      <mat-form-field>\\n        <mat-chip-list #chipList>\\n          <mat-chip\\n            *ngFor=\\\"let diagnosis of selected\\\"\\n            [selectable]=\\\"selectable\\\"\\n            [removable]=\\\"removable\\\"\\n            (removed)=\\\"remove(diagnosis)\\\">\\n            {{diagnosis.name}}\\n            <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n          </mat-chip>\\n        </mat-chip-list>\\n<!--  -->\\n<!--  -->\\n        <input matInput \\n        [formControl]=\\\"input\\\" \\n        type=\\\"text\\\" \\n        [matAutocomplete]=\\\"auto\\\"\\n        [matChipInputFor]=\\\"chipList\\\"      \\n        [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n        >\\n        <!-- [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" -->\\n<!-- (matChipInputTokenEnd)=\\\"add($event)\\\" -->\\n      </mat-form-field>\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option \\n          *ngFor=\\\"let diagnosis of autoDiagnosis\\\" \\n          [value]=\\\"diagnosis.name\\\" \\n          (click)=\\\"select(diagnosis)\\\">\\n          {{diagnosis.name}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </div>\\n    \\n    <button mat-button (click)=\\\"close('next')\\\" class=\\\"right\\\">Next <mat-icon>navigate_next</mat-icon></button>\\n    <button mat-flat-button (click)=\\\"close('finish')\\\" color=\\\"primary\\\" class=\\\"right\\\" style=\\\"margin-right: 1em;\\\">Finish</button>\\n  </div>\\n</section>\"","module.exports = \"section.container {\\n  margin-top: 5%;\\n  margin-bottom: 5%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'; \nimport { Diagnosis } from '../model/Diagnosis';\nimport { FormControl } from '@angular/forms';\nimport { Hisstory } from '../model/Hisstory';\nimport { HisstoryService } from '../service/hisstory.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete} from '@angular/material';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-diagnosis',\n  templateUrl: './diagnosis.component.html',\n  styleUrls: ['./diagnosis.component.scss']\n})\nexport class DiagnosisComponent implements OnInit {\n\n  private autoDiagnosis: Diagnosis[] = []; \n  private fullDiagnosis: Diagnosis[] = []; \n  private input: FormControl = new FormControl(); \n  private selected: Diagnosis[] = []; \n  private visible = true;\n  private selectable = true;\n  private removable = true;\n  private addOnBlur = false;\n  private separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  constructor(\n    private thisDialog: MatDialogRef<DiagnosisComponent>, \n    @Inject(MAT_DIALOG_DATA) public data,\n    private _hisstory: HisstoryService\n  ) {\n      this._hisstory.getDiagnosises(\"all\").subscribe(\n        (diagnosises) => {\n          this.autoDiagnosis = diagnosises; \n          this.fullDiagnosis = diagnosises; \n        }\n      )\n   }\n\n  ngOnInit() {\n    this.input.valueChanges.subscribe(\n      (key) => {\n        if(key == \"\") this.autoDiagnosis = this.fullDiagnosis; \n        else\n          this._hisstory.getDiagnosises(key).subscribe(\n            (diagnosises) => {\n              this.autoDiagnosis = diagnosises; \n            }\n          )\n      }\n    )\n  }\n\n  select(diagnosis: Diagnosis){\n    if(this.selected.find((e)=> { return e.name == diagnosis.name }) === undefined)\n      this.selected.push(diagnosis);\n    this.autoDiagnosis = this.fullDiagnosis;  \n    this.input.reset(); \n  }\n\n  remove(diagnosis: Diagnosis){\n    this.selected.splice(this.selected.indexOf(diagnosis),1); \n  }\n\n  onFocus(){\n    if(this.input.value == ''){\n      this.autoDiagnosis = this.fullDiagnosis; \n    }\n  }\n\n  close(message){\n    this.submit(); \n    this.thisDialog.close(message); \n  }\n\n  submit(){\n    this._hisstory.diagnosises(this.data.queue.hisstory_id, this.selected).subscribe(\n      (responce) => {\n        console.log(responce); \n      }\n    )\n  }\n}\n","module.exports = \"<div id=\\\"FAB\\\" (click)=\\\"open()\\\" (mouseenter)=\\\"open()\\\" (mouseleave)=\\\"close()\\\">\\n  <ul id=\\\"options\\\" class=\\\"options\\\">\\n    <li (click)=\\\"action.emit(4)\\\">\\n      <button mat-mini-fab class=\\\"red\\\">\\n        <img src=\\\"assets/speaker.svg\\\" style=\\\"width: 1.4rem;\\\"/>\\n      </button>\\n    </li>\\n\\n    <li (click)=\\\"action.emit(3)\\\">\\n      <button mat-mini-fab class=\\\"yellow\\\">\\n        <img src=\\\"assets/drug.svg\\\" style=\\\"width: 1.4rem;\\\"/>\\n      </button>\\n    </li>\\n\\n    <li (click)=\\\"action.emit(2)\\\">\\n      <button mat-mini-fab class=\\\"green\\\">\\n        <img src=\\\"assets/flask-full.svg\\\" style=\\\"width: 1.4rem;\\\"/>\\n      </button>\\n    </li>\\n\\n    <li (click)=\\\"action.emit(1)\\\">\\n      <button mat-mini-fab class=\\\"blue white-text\\\">\\n        <mat-icon>navigate_next</mat-icon>\\n      </button>\\n    </li>\\n  </ul>\\n  <button mat-fab color=\\\"accent\\\" class=\\\"white-text\\\" (hover)=\\\"console.log('hover')\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\"","module.exports = \"@-webkit-keyframes options {\\n  from {\\n    margin-bottom: -22px;\\n    opacity: 0; }\\n  to {\\n    margin-top: 12px;\\n    opacity: 1; } }\\n\\n@keyframes options {\\n  from {\\n    margin-bottom: -22px;\\n    opacity: 0; }\\n  to {\\n    margin-top: 12px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes optionsRev {\\n  from {\\n    margin-top: 12px;\\n    opacity: 1; }\\n  to {\\n    margin-bottom: -22px;\\n    opacity: 0; } }\\n\\n@keyframes optionsRev {\\n  from {\\n    margin-top: 12px;\\n    opacity: 1; }\\n  to {\\n    margin-bottom: -22px;\\n    opacity: 0; } }\\n\\n#FAB {\\n  position: fixed;\\n  right: 16px;\\n  bottom: 52px; }\\n\\n#FAB .options {\\n    list-style: none; }\\n\\n#FAB .options li {\\n      text-align: center;\\n      margin-bottom: 12px;\\n      opacity: 0; }\\n\\n#FAB .open li {\\n    opacity: 1;\\n    -webkit-animation-name: options;\\n            animation-name: options;\\n    -webkit-animation-delay: 0s;\\n            animation-delay: 0s;\\n    -webkit-animation-duration: 0.5s;\\n            animation-duration: 0.5s;\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear; }\\n\\n#FAB .close li {\\n    -webkit-animation-name: optionsRev;\\n            animation-name: optionsRev;\\n    -webkit-animation-delay: 0s;\\n            animation-delay: 0s;\\n    -webkit-animation-duration: 0.5s;\\n            animation-duration: 0.5s;\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear; }\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material'; \nimport { RegisterationFormComponent } from '../registeration-form/registeration-form.component'; \nimport { RoleService } from '../service/role.service'; \n\ndeclare var M; \n@Component({\n  selector: 'app-floating-action-btn',\n  templateUrl: './floating-action-btn.component.html',\n  styleUrls: ['./floating-action-btn.component.scss'],\n  providers: [RoleService],\n})\nexport class FloatingActionBtnComponent implements OnInit {\n\n  @Output() action = new EventEmitter(); \n\n  private buttonRef; \n  constructor(public registrationDialog: MatDialog,  public _roles: RoleService) { }\n  public roles: object; \n  ngOnInit() {\n    this._roles.getRoles().subscribe(\n      result => {\n        this.roles = result; \n      }\n    ); \n\n  }\n\n\n  openRagistrationFrom(){\n    let dialog = this.registrationDialog.open(RegisterationFormComponent,{\n      width: '600px', \n      data: {\n        roles: this.roles,\n      }, \n    });\n    \n    dialog.afterClosed().subscribe(\n      responce => {\n        console.log(responce); \n      }\n    );\n  }\n\n  open(){\n    let options = document.getElementById('options');\n    options.classList.remove('close'); \n    options.classList.add('open');\n  }\n\n  close(){\n    setTimeout(()=>{\n      let options = document.getElementById('options');\n      options.classList.remove('open');\n      options.classList.add('close');      \n    }, 500); \n    \n  }\n}\n","module.exports = \"<section class=\\\"row\\\" style=\\\"margin-bottom: 0px\\\">\\n  <form [formGroup]=\\\"form\\\">\\n    <mat-form-field>\\n      <textarea matInput \\n      formControlName=\\\"chief_complaint\\\" \\n      placeholder=\\\"Chief complaint (CC)\\\"\\n      (blur)=\\\"$chief_complaint()\\\">\\n      </textarea>\\n    </mat-form-field>\\n    <div class=\\\"row\\\">\\n      <p class=\\\"small\\\" style=\\\"padding-left: 24px; width: 100%\\\">Vital signs <span class=\\\"small secondery\\\">(optional)</span></p>\\n      <div class=\\\"col m3\\\">\\n         <mat-form-field>\\n           <input matInput formControlName=\\\"temprature\\\" placeholder=\\\"Temprature\\\" (blur)=\\\"$metrix()\\\"/>\\n         </mat-form-field>\\n      </div>\\n      <div class=\\\"col m3\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"BP\\\" placeholder=\\\"BP\\\" (blur)=\\\"$metrix()\\\"/>\\n        </mat-form-field> \\n      </div>\\n      <div class=\\\"col m3\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"puls_rate\\\" placeholder=\\\"Puls rate\\\" (blur)=\\\"$metrix()\\\"/>\\n        </mat-form-field> \\n      </div>\\n      <div class=\\\"col m3\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"respiratory_rate\\\" placeholder=\\\"Respiratrory_rate\\\" (blur)=\\\"$metrix()\\\"/>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </form>\\n</section>\"","module.exports = \"\"","import { Component, OnInit, Input} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'; \nimport { HisstoryService } from '../service/hisstory.service'; \nimport { Hisstory } from '../model/Hisstory';\n\n@Component({\n  selector: 'app-history-form',\n  templateUrl: './history-form.component.html',\n  styleUrls: ['./history-form.component.scss']\n})\nexport class HistoryFormComponent implements OnInit {\n\n  private form: FormGroup; \n  @Input() hisstory: Hisstory; \n  \n  constructor(private _form: FormBuilder,private _hisstory: HisstoryService) { \n    this.form = this._form.group({\n      id: [\"\"],\n      patient_queue_id: [\"\"],\n      created_at: [\"\"], \n      updated_at: [\"\"], \n      deleted_at: [\"\"], \n      chief_complaint: [\"\"], \n      temprature: [\"1\"], \n      BP: [\"\"], \n      puls_rate: [\"\"], \n      respiratory_rate: [\"\"]\n    }); \n  }\n\n  ngOnChanges(){\n\n    this.form.patchValue(this.hisstory); \n  }\n  ngOnInit() { \n    this.form.valueChanges.subscribe(\n      (value)=> {}\n    )\n  }\n\n  $chief_complaint() {\n    this._hisstory.chif_complient(this.hisstory.id, this.form.controls.chief_complaint.value)\n    .subscribe(); \n  }\n\n  $metrix(){\n    this._hisstory.metrix(this.hisstory.id, this.form.value)\n    .subscribe(); \n  }\n  get chief_complaint(){ return this.form.get('chief_complaint');}\n  get temprature(){ return this.form.get('temprature');}\n  get BP(){ return this.form.get('BP');}\n  get puls_rate(){ return this.form.get('puls_rate');}\n  get respiratory_rate(){ return this.form.get('respiratory_rate');}\n}\n","module.exports = \"<!-- <div class=\\\"container\\\"> -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col m4 l3 s12\\\">\\n      <app-left-side></app-left-side>\\n    </div>\\n\\n      <div class=\\\"col m8 l9 s12\\\">\\n        <mat-card style=\\\"width: 90; margin: auto\\\">\\n          <button mat-icon-button [routerLink]=\\\"'/hisstory/'+queue_id\\\"><mat-icon>arrow_back</mat-icon></button>\\n          <h5 style=\\\"margin-left: 3em; display: inline\\\">Laboratory Requests</h5>\\n          <app-lab-result [tests]=\\\"requests\\\"></app-lab-result>\\n          <!-- <table mat-table [dataSource]=\\\"requestDatasource\\\" \\n          class=\\\"mat-elevation-z0\\\">\\n\\n            <ng-container matColumnDef=\\\"no\\\">\\n                <th mat-header-cell *matHeaderCellDef> No </th>\\n                <td mat-cell *matCellDef=\\\"let request\\\"> {{requests.indexOf(request)+1}} </td>\\n              </ng-container>\\n\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let request\\\"> {{request.laboratory_test.name}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"normality\\\">\\n              <th mat-header-cell *matHeaderCellDef> Normality </th>\\n              <td mat-cell *matCellDef=\\\"let request\\\">\\n                <span *ngIf=\\\"request.normality == null\\\" class='secondery small'>Pending..</span>\\n                <span *ngIf=\\\"request.normality != null\\\">\\n                  <mat-icon *ngIf=\\\"request.normality\\\" style=\\\"color: green\\\">done</mat-icon>\\n                  <mat-icon *ngIf=\\\"!request.normality\\\" style=\\\"color: red\\\">close</mat-icon>\\n                </span>\\n                \\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"value\\\">\\n              <th mat-header-cell *matHeaderCellDef> Value </th>\\n              <td mat-cell *matCellDef=\\\"let request\\\"> {{request.value }} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"note\\\">\\n              <th mat-header-cell *matHeaderCellDef> Note </th>\\n              <td mat-cell *matCellDef=\\\"let request\\\"> {{request.note}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table> -->\\n        </mat-card>\\n      </div>    \\n  </div>\\n<!-- </div> -->\\n<app-saved-states \\n[activeQueueId]=\\\"queue_id\\\"\\n(open) = \\\"open($event)\\\"\\n></app-saved-states>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Laboratory } from '../model/Laboratory';\nimport { LaboratoryService } from '../service/laboratory.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-lab-responce',\n  templateUrl: './lab-responce.component.html',\n  styleUrls: ['./lab-responce.component.scss']\n})\nexport class LabResponceComponent implements OnInit {\n\n  private requestDatasource = new MatTableDataSource<Laboratory>(); \n  private requests: Laboratory[] = []; \n  private displayedColumns = [\"no\", \"name\",\"normality\", \"value\", \"note\"]; \n  private queue_id: number; \n  constructor(private _lab: LaboratoryService, private _route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this._route.params.subscribe(\n      params =>{\n        this._lab.getRequests(params.queue_id).subscribe(\n          (requests) => {\n            this.queue_id = params.queue_id; \n            this.requests = requests; \n            this.requestDatasource.data = this.requests; \n          }\n        )\n      }\n    )\n    \n  }\n\n}\n","module.exports = \"<table mat-table [dataSource]=\\\"testDataSource\\\" *ngIf=\\\"tests.length > 0\\\"\\nclass=\\\"mat-elevation-z0\\\">\\n\\n  <ng-container matColumnDef=\\\"no\\\">\\n      <th mat-header-cell *matHeaderCellDef> No </th>\\n      <td mat-cell *matCellDef=\\\"let test\\\"> {{tests.indexOf(test)+1}} </td>\\n    </ng-container>\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let test\\\"> {{test.laboratory_test.name}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"normality\\\">\\n    <th mat-header-cell *matHeaderCellDef> Normality </th>\\n    <td mat-cell *matCellDef=\\\"let test\\\">\\n      <span *ngIf=\\\"test.normality == null\\\" class='secondery small'>No responce</span>\\n      <span *ngIf=\\\"test.normality != null\\\">\\n        <mat-icon *ngIf=\\\"test.normality\\\" style=\\\"color: green\\\">done</mat-icon>\\n        <mat-icon *ngIf=\\\"!test.normality\\\" style=\\\"color: red\\\">close</mat-icon>\\n      </span>\\n      \\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"value\\\">\\n    <th mat-header-cell *matHeaderCellDef> Value </th>\\n    <td mat-cell *matCellDef=\\\"let test\\\"> {{test.value }} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"note\\\">\\n    <th mat-header-cell *matHeaderCellDef> Note </th>\\n    <td mat-cell *matCellDef=\\\"let test\\\"> {{test.note}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table> \\n<div class=\\\"row\\\" *ngIf=\\\"tests.length == 0\\\">\\n  <div class=\\\"center\\\" style=\\\"width: 100%; opacity: 0.8\\\">\\n    <h6><strong class=\\\"tertiary center\\\">\\n      <B>No laboratory request and responce</B>\\n    </strong></h6>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Laboratory } from '../model/Laboratory';\nimport { MatTable, MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-lab-result',\n  templateUrl: './lab-result.component.html',\n  styleUrls: ['./lab-result.component.scss']\n})\nexport class LabResultComponent implements OnInit {\n\n  private testDataSource: MatTableDataSource<Laboratory> = new MatTableDataSource<Laboratory>(); \n  private displayedColumns = [\"no\", \"name\",\"normality\", \"value\", \"note\"]; \n\n  constructor() { }\n\n  @Input() tests: Laboratory[] = [];\n\n  ngOnChanges(){\n    this.testDataSource.data = this.tests; \n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card style=\\\"margin-top: 16px;\\\" class=\\\"row\\\">\\n  <div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n    <div class=\\\"indeterminate\\\"></div>\\n  </div>\\n  <div [class.form-loading]=\\\"loading\\\" style=\\\"padding: 0 1em\\\">\\n    <h5 style=\\\"margin-left: 16px\\\">New Laboratory Request</h5>\\n    <div class=\\\"row\\\" style=\\\"margin: 0px 1.5em; \\\">\\n      <div class=\\\"col s11 m11\\\" style=\\\"padding-right: 0px\\\">\\n        <mat-form-field>   \\n          <input matInput [formControl]=\\\"add\\\" placeholder=\\\"Laboratory test name\\\" [matAutocomplete]=\\\"auto\\\">    \\n        </mat-form-field>\\n      </div>\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let test of testAuto\\\" [value]=\\\"test.name\\\" (click)=\\\"$add(test)\\\">\\n          {{ test.name }}\\n        </mat-option>\\n      </mat-autocomplete>\\n      <div class=\\\"col s1 m1\\\" style=\\\"padding-left: 0px\\\">\\n        <button mat-icon-button>\\n          <mat-icon>add</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"tests.length == 0\\\">\\n      <div style=\\\"text-align: center\\\"><strong><b>No tests are requested yet</b></strong></div>\\n    </div>\\n\\n    <div *ngIf=\\\"tests.length > 0\\\">\\n      <div style=\\\"width: 90%; margin:auto\\\" *ngIf=\\\"tests.length > 2\\\"> \\n        <mat-form-field>   \\n          <input matInput [formControl]=\\\"filter\\\" placeholder=\\\"Search requested laboratory test\\\">    \\n        </mat-form-field>\\n      </div>\\n      \\n      <table mat-table [dataSource]=\\\"testDatasource\\\" \\n      class=\\\"mat-elevation-z0\\\">\\n      \\n        <!-- number Column -->\\n        <ng-container matColumnDef=\\\"no\\\">\\n            <th mat-header-cell *matHeaderCellDef> No </th>\\n            <td mat-cell *matCellDef=\\\"let test\\\"> {{tests.indexOf(test)+1}} </td>\\n          </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\n          <td mat-cell *matCellDef=\\\"let test\\\"> {{test.name}} </td>\\n        </ng-container>\\n\\n        <!-- icon Column -->\\n        <ng-container matColumnDef=\\\"icon\\\">\\n          <th mat-header-cell *matHeaderCellDef></th>\\n          <td mat-cell *matCellDef=\\\"let test\\\" style=\\\"text-align: right\\\">\\n            <button mat-icon-button class=\\\"danger-text\\\" (click)=\\\"remove(test)\\\">\\n              <mat-icon>remove_circle_outline</mat-icon>\\n            </button>  \\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n      <div id='#buttons' style=\\\"margin-top: 8px;margin-right: 36px\\\" class=\\\"right\\\">\\n        <button mat-flat-button (click)=\\\"send()\\\">\\n          <span>SEND </span>\\n          <mat-icon>send</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</mat-card>\"","module.exports = \"h5 {\\n  padding-left: 24px; }\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms'; \nimport { Laboratory_test } from '../model/Laboratory_test';\nimport { LaboratoryService } from '../service/laboratory.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n@Component({\n  selector: 'app-laboratory',\n  templateUrl: './laboratory.component.html',\n  styleUrls: ['./laboratory.component.scss']\n})\nexport class LaboratoryComponent implements OnInit {\n  @Input() queue; \n  \n  private testDatasource = new MatTableDataSource<Laboratory_test>(); \n  private tests: Laboratory_test[] = [];\n  private testAuto: Laboratory_test[] = []; \n  private fullTest: Laboratory_test[] = []; \n  private loading: boolean = false; \n  displayedColumns: string[] = ['no', 'name','icon'];\n\n  private add: FormControl = new FormControl(); \n  private filter: FormControl = new FormControl(); \n\n  constructor(private _lab: LaboratoryService, private _route:Router) { }\n\n  ngOnInit() {\n    this._lab.autoComplet(\"all\").subscribe(\n      tests => { this.testAuto = tests; }\n    )\n    this.add.valueChanges.subscribe(\n      value => {  \n          this._lab.autoComplet(value).subscribe(\n          tests => { this.testAuto = tests;this.fullTest = tests;  }\n      )}\n    )\n  }\n\n  $add(test){\n    let _test = this.tests.filter((e)=>{\n      return (e.name == test.name); \n    });\n\n    this.add.setValue(\"\");\n    if(_test.length == 0){\n      this.tests.push(test); \n        \n      this.testDatasource.data = this.tests; \n    }\n    \n    this.testAuto = this.fullTest; \n  }\n\n  remove(test){\n    this.tests.splice(this.tests.indexOf(test),1);\n    this.testDatasource.data = this.tests; \n  }\n\n  send(){\n    this.loading = true; \n    this._lab.request(this.tests,this.queue.id).subscribe(\n      value => {\n        this.loading = false; \n        this.tests = []; \n        this.testDatasource.data = this.tests; \n        this._route.navigate(['/lab/result/'+this.queue.id]); \n      }\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-side',\n  templateUrl: './left-side.component.html',\n  styleUrls: ['./left-side.component.scss']\n})\nexport class LeftSideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export const RootURL = \"\"; ","export class User {\n  constructor(\n    public id: number,\n    public worker_id: string,\n    public first_name: string,\n    public father_name: string,\n    public grand_father_name: string,\n    public gender: string,\n    public role_id: number,\n    public email: string,\n    public phone: string,\n    public role?: number,\n    public room_number?: number, \n    public profile_pic?: string,\n    public setup_step?: number,\n    public created_at?: string,\n    public updated_at?: string ){}\n  \n}\n","module.exports = \"<nav class=\\\"primary\\\" >\\n  <div class=\\\"container\\\">\\n      <div class=\\\"nav-wrapper\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"brand-logo\\\">DMU Clinic</a>\\n          <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n            <li *ngFor=\\\"let item of menuItems\\\"><a [href]=\\\"item.href\\\">{{item.text}}</a></li>\\n          </ul>\\n      </div>\\n  </div>\\n  <div>\\n    <span href=\\\"#\\\" data-target=\\\"slide-out\\\" class=\\\"sidenav-trigger\\\"><i class=\\\"material-icons\\\">menu</i></span>\\n  </div>\\n  <div class=\\\"container \\\">\\n    <span class='right hide-on-large-only '>\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"appMenu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n    </span>\\n  </div>\\n\\n</nav>\\n\\n<mat-menu #appMenu=\\\"matMenu\\\">\\n  <button mat-menu-item [routerLink]=\\\"item.href\\\" *ngFor=\\\"let item of menuItems\\\">{{item.text}}</button>\\n</mat-menu>\\n\"","module.exports = \"#menuDropdown {\\n  width: auto !important; }\\n\\nnav {\\n  margin-bottom: 20px;\\n  height: 56px !important;\\n  line-height: 56px; }\\n\\nnav a {\\n    height: 56px !important;\\n    line-height: 50px; }\\n\\nnav #nav-mobile {\\n    height: 56px !important;\\n    line-height: 56px; }\\n\\nnav #nav-mobile > li {\\n      height: 56px !important;\\n      line-height: 56px; }\\n\\nnav #nav-mobile > li > a {\\n        height: 56px !important;\\n        line-height: 56px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  public menuItems = [\n    {href: 'users', text: 'Users'}\n  ]; \n  constructor() { }\n\n  ngOnInit() {\n   \n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <div class=\\\"container\\\" style=\\\"margin:0px; width: 100%;\\\">\\n      <div class=\\\"row\\\" style=\\\"margin: 0px\\\">\\n        <div class=\\\"col s11 m11\\\" style=\\\"text-align: left; padding: 0px\\\">\\n          <input type=\\\"search\\\" id=\\\"search\\\" placeholder=\\\"Search patient\\\" \\n              style=\\\"margin: 0px;width: 100%;\\\"\\n              [formControl]=\\\"searchControl\\\"\\n              [matAutocomplete]=\\\"auto\\\">\\n              \\n        </div>\\n        <div class=\\\"col s1 m1\\\">\\n          <mat-icon (click)=\\\"$search()\\\">search</mat-icon>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </mat-card>\\n</div>\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n  <mat-option *ngFor=\\\"let patient of autocomplets\\\" [value]=\\\"patient.reg_id\\\" (click)=\\\"$search(patient)\\\">\\n    {{patient.reg_id}}<i class=\\\"secondery right\\\">{{patient.first_name}} {{patient.father_name}}</i>\\n  </mat-option>\\n</mat-autocomplete>\"","module.exports = \"#search {\\n  padding: 4px;\\n  padding-left: 12px;\\n  border: none;\\n  font-size: 1.2em;\\n  outline: none; }\\n\\n.mat-card {\\n  padding: 12px;\\n  padding-right: 16px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms'; \n\nimport { Patient } from '../model/Patient';\nimport { PatientService } from '../service/patient.service'; \n@Component({\n  selector: 'app-patient-search',\n  templateUrl: './patient-search.component.html',\n  styleUrls: ['./patient-search.component.scss']\n})\nexport class PatientSearchComponent implements OnInit {\n\n  @Output() patient = new EventEmitter(); \n\n  @Input()\n  set search(key: string){\n    this.searchControl.patchValue(key); \n    this.$search(); \n  }\n\n  private autocomplets: Patient[]; \n  private searchControl: FormControl;  \n\n  constructor(private _patinet: PatientService) { }\n\n  ngOnInit() {\n    this.searchControl = new FormControl(); \n    this.searchControl.valueChanges.subscribe(\n      (val) => {\n        if(val != \"\"){\n          this._patinet.autoComplete(val).subscribe(\n            (patients: Patient[]) => {\n              this.autocomplets = patients; \n            }\n          )\n        }else{\n          this.autocomplets = []; \n        }\n      }\n    )\n  }\n\n  $search(patient: Patient = null) {\n    if(patient){\n      this.patient.emit(patient); \n    }else{\n      this._patinet.search(this.searchControl.value).subscribe(\n        (result) => {\n          this.patient.emit(result);\n        }\n      )\n    }\n    \n  }\n}\n","module.exports = \"<div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n  <div class=\\\"container\\\">\\n    <h5 style=\\\"display: inline\\\">{{(patient)?.first_name}} {{(patient)?.father_name}} {{(patient)?.grand_father_name}}</h5>\\n    <!-- <strong class=\\\"right\\\"><span>{{(patient)?.reg_id}}</span> </strong> -->\\n    <br>\\n    <strong class=\\\"secondery\\\">{{((patient)?.department)?.name}} Department</strong><br>\\n    <strong class=\\\"secondery\\\">Id number {{(patient)?.reg_id}}</strong><br>\\n\\n    <div class=\\\"col m12 l12 s12\\\">\\n      <div style=\\\"margin-top: .8em\\\">\\n        <span class=\\\"secondery\\\">Age </span><span><strong>{{(patient)?.age}} years old</strong></span><br>\\n        <span class=\\\"secondery\\\">Dorm </span> <span>B <strong>{{(patient)?.dorm_block}}</strong> D <strong>{{(patient)?.dorm_room_number}}</strong></span><br>\\n        <mat-icon class=\\\"secondery\\\" style=\\\"font-size: 1rem\\\">phone</mat-icon> \\n          <strong>{{(patient)?.phone}}</strong>\\n        <!-- <strong>Registerd </strong><span>{{(patient)?.registerd_at}}</span><br> -->\\n      </div>\\n    </div>\\n  </div>\\n     <!-- <div class=\\\"col m6 l6 s12\\\" style=\\\"border: 1px solid #ededed; padding: 16px\\\">\\n      \\n    </div>  -->\\n</div>\"","module.exports = \"section {\\n  margin-top: 10%; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient } from '../model/Patient'; \n\n@Component({\n  selector: 'app-patinet-view',\n  templateUrl: './patinet-view.component.html',\n  styleUrls: ['./patinet-view.component.scss']\n})\nexport class PatinetViewComponent implements OnInit {\n\n  @Input() patient: Patient;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card style=\\\"margin-top: 16px;\\\" class=\\\"row\\\">\\n  <div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n    <div class=\\\"indeterminate\\\"></div>\\n  </div>\\n  <div [class.form-loading]=\\\"loading\\\" style=\\\"padding: 0 1em\\\">\\n    <h5 style=\\\"margin-left: 16px\\\">Drug prescription</h5>\\n    <form action=\\\"\\\" [formGroup]=\\\"add\\\">\\n      <div class=\\\"row\\\" style=\\\"margin: 0px 1.5em; \\\">\\n        <div class=\\\"col s12 m5\\\" style=\\\"padding-right: 0px\\\">\\n          <mat-form-field>   \\n            <input matInput \\n            [formControl]=\\\"name\\\" \\n            placeholder=\\\"Drug\\\" \\n            [matAutocomplete]=\\\"auto\\\"\\n            #drugInput (focus)=\\\"onFocus(drugInput.value)\\\">    \\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let drug of drugAuto\\\" [value]=\\\"drug.name\\\">\\n                {{ drug.name }}\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n        \\n        <div class=\\\"col s5 m2\\\" style=\\\"padding-right: 0px\\\">\\n          <mat-form-field>   \\n            <input matInput [formControl]=\\\"dosage\\\" placeholder=\\\"Dosage\\\">    \\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col s5 m2\\\" style=\\\"padding-right: 0px\\\">\\n          <mat-form-field>   \\n            <mat-select [formControl]=\\\"frequency_id\\\" placeholder=\\\"Frequency\\\">    \\n              <mat-option *ngFor=\\\"let frequency of frequencies\\\" [value]=\\\"frequency.id\\\">\\n                {{frequency.abr}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col s5 m2\\\">\\n          <mat-form-field>\\n            <mat-select [formControl]=\\\"root_id\\\" placeholder=\\\"Root\\\">\\n              <mat-option *ngFor=\\\"let root of roots\\\" [value]=\\\"root.id\\\">\\n                {{root.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col s2 m1\\\" style=\\\"padding-right: 0px\\\"> \\n          <button mat-icon-button class=\\\"primary white-text\\\" (click)=\\\"$add()\\\" [disabled]='add.invalid' >\\n            <mat-icon style=\\\"line-height: 20px\\\">arrow_downward</mat-icon>\\n          </button> \\n        </div>\\n      </div>\\n    </form>\\n    \\n\\n    <div *ngIf=\\\"prescriptions.length == 0\\\">\\n      <div style=\\\"text-align: center\\\"><strong><b>No drugs are prescribed yet</b></strong></div>\\n    </div>\\n\\n    <div *ngIf=\\\"prescriptions.length > 0\\\">\\n      <div style=\\\"width: 90%; margin:auto\\\" *ngIf=\\\"prescriptions.length > 2\\\"> \\n        <mat-form-field>   \\n          <input matInput [formControl]=\\\"filter\\\" placeholder=\\\"Search requested laboratory drug\\\">    \\n        </mat-form-field>\\n      </div>\\n      \\n      <table mat-table [dataSource]=\\\"drugDataSource\\\" \\n      class=\\\"mat-elevation-z0\\\">\\n      \\n        <!-- number Column -->\\n        <ng-container matColumnDef=\\\"no\\\">\\n            <th mat-header-cell *matHeaderCellDef> No </th>\\n            <td mat-cell *matCellDef=\\\"let drug\\\"> {{prescriptions.indexOf(drug)+1}} </td>\\n          </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\n          <td mat-cell *matCellDef=\\\"let drug\\\"> {{drug.name}} </td>\\n        </ng-container>\\n\\n         <!-- Dose Column -->\\n         <ng-container matColumnDef=\\\"Dose\\\">\\n          <th mat-header-cell *matHeaderCellDef> Dose </th>\\n          <td mat-cell *matCellDef=\\\"let drug\\\"> {{drug.dosage}} </td>\\n        </ng-container>\\n\\n         <!-- Frequency Column -->\\n         <ng-container matColumnDef=\\\"frequency\\\">\\n          <th mat-header-cell *matHeaderCellDef> Frequency </th>\\n          <td mat-cell *matCellDef=\\\"let drug\\\"> {{drug.frequency.abr}} </td>\\n        </ng-container>\\n\\n        <!-- Root Column -->\\n        <ng-container matColumnDef=\\\"root\\\">\\n            <th mat-header-cell *matHeaderCellDef> Root </th>\\n            <td mat-cell *matCellDef=\\\"let drug\\\"> {{drug.root.name}} </td>\\n          </ng-container>\\n\\n        <!-- icon Column -->\\n        <ng-container matColumnDef=\\\"icon\\\">\\n          <th mat-header-cell *matHeaderCellDef></th>\\n          <td mat-cell *matCellDef=\\\"let drug\\\" style=\\\"text-align: right\\\">\\n            <button mat-icon-button class=\\\"danger-text\\\" (click)=\\\"remove(drug)\\\">\\n              <mat-icon>remove_circle_outline</mat-icon>\\n            </button>  \\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n      <div id='#buttons' style=\\\"margin-top: 8px;margin-right: 36px\\\" class=\\\"right\\\">\\n        <button mat-flat-button (click)=\\\"send()\\\">\\n          <span>SEND </span>\\n          <mat-icon>send</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Prescription } from '../model/Prescription';\nimport { MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { PharmacyService } from '../service/pharmacy.service';\nimport { Drug } from '../model/Drug'; \nimport { Drug_frequency } from '../model/Drug_frequency';\nimport { Drug_root } from '../model/Drug_root';\n\n@Component({\n  selector: 'app-pharmacy',\n  templateUrl: './pharmacy.component.html',\n  styleUrls: ['./pharmacy.component.scss']\n})\nexport class PharmacyComponent implements OnInit {\n  @Input() queue;   \n  @Output() status: EventEmitter<number> = new EventEmitter<number>(); \n  \n  private drugDataSource = new MatTableDataSource<Prescription>(); \n  private prescriptions: Prescription[] = [];\n  private drugAuto: Drug[] = []; \n  private fullDrug: Drug[] = []; \n  private loading: boolean = false; \n  private frequencies: Drug_frequency[]; \n  private roots: Drug_root[]; \n\n  displayedColumns: string[] = ['no', 'name','frequency', 'root', 'icon'];\n\n  private add: FormGroup; \n  private filter: FormControl = new FormControl(); \n\n  constructor(\n    private _pharmacy: PharmacyService, \n    private _route:Router, \n    private _form: FormBuilder) { }\n\n  ngOnInit() {\n\n    this.add = this._form.group({\n      id: [\"\"], \n      name: [\"\", Validators.required], \n      dosage: [\"\", Validators.required ], \n      root_id: [\"\", Validators.required ],\n      frequency_id: [\"\", Validators.required ],\n    })\n    this._pharmacy.drugAutoComplet(\"\").subscribe(\n      tests => { this.drugAuto = tests; }\n    )\n    this.add.controls.name.valueChanges.subscribe(\n      value => {  \n          this._pharmacy.drugAutoComplet(value).subscribe(\n          tests => { this.drugAuto = tests;this.fullDrug = tests;  }\n      )}\n    )\n    \n    this._pharmacy.getFrequencies().subscribe(frequencies => {this.frequencies = frequencies;}); \n    this._pharmacy.getRoots().subscribe( roots => { this.roots = roots }); \n  }\n\n  $add(){\n    let $drug = this.add.controls.name.value; \n    let _drug = this.prescriptions.filter((e)=>{\n      return (e.drug.name == $drug); \n    });\n\n    if(_drug.length == 0){\n      let $data = this.add.value; \n    \n      $data.frequency = (this.frequencies.find(x => x.id == $data.frequency_id)); \n      $data.root = (this.roots.find(x => x.id == $data.root_id)); \n      $data.drug = (this.fullDrug.find(x => x.name == $data.name)); \n      this.prescriptions.push($data); \n      this.drugDataSource.data = this.prescriptions; \n    }\n    \n    this.drugAuto = this.fullDrug; \n    this.add.reset();\n  }\n\n  onFocus(val){\n   \n    if(val == \"\"){ \n      this.drugAuto = this.fullDrug; \n    }\n  }\n  remove(drug){\n    this.prescriptions.splice(this.prescriptions.indexOf(drug),1);\n    this.drugDataSource.data = this.prescriptions; \n  }\n\n  send(){\n    this.loading = true; \n    this._pharmacy.prescribe(this.queue.hisstory.id, this.prescriptions).subscribe(\n      value => {\n        this.loading = false; \n        this.prescriptions = []; \n        this.drugDataSource.data = this.prescriptions; \n        this.status.emit(1); \n      }\n    )\n  }\n\n  get name() { return this.add.get('name'); }\n  get dosage() { return this.add.get('dosage'); }\n  get root_id() { return this.add.get('root_id'); }\n  get frequency_id() { return this.add.get('frequency_id'); }\n} \n","module.exports = \"<table mat-table [dataSource]=\\\"prescriptionDatasource\\\"  *ngIf=\\\"prescriptions.length > 1\\\"\\nclass=\\\"mat-elevation-z0\\\">\\n\\n  <!-- number Column -->\\n  <ng-container matColumnDef=\\\"no\\\">\\n      <th mat-header-cell *matHeaderCellDef> No </th>\\n      <td mat-cell *matCellDef=\\\"let prescription\\\"> {{prescriptions.indexOf(prescription)+1}} </td>\\n    </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let prescription\\\"> {{prescription.name}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"dose\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dose </th>\\n      <td mat-cell *matCellDef=\\\"let prescription\\\"> {{prescription.dose}} </td>\\n    </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"root\\\">\\n      <th mat-header-cell *matHeaderCellDef> Root </th>\\n      <td mat-cell *matCellDef=\\\"let prescription\\\"> {{prescription.root}} </td>\\n    </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"frequency\\\">\\n      <th mat-header-cell *matHeaderCellDef> Freqency </th>\\n      <td mat-cell *matCellDef=\\\"let prescription\\\"> {{prescription.frequency}} </td>\\n    </ng-container>\\n\\n  <!-- icon Column -->\\n  <!-- <ng-container matColumnDef=\\\"icon\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <td mat-cell *matCellDef=\\\"let prescription\\\" style=\\\"text-align: right\\\">\\n      <button mat-icon-button class=\\\"danger-text\\\" (click)=\\\"remove(prescription)\\\">\\n        <mat-icon>remove_circle_outline</mat-icon>\\n      </button>  \\n    </td>\\n  </ng-container> -->\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<div class=\\\"row\\\" *ngIf=\\\"prescriptions.length == 0\\\">\\n  <div class=\\\"center\\\" style=\\\"width: 100%; opacity: 0.8\\\">\\n    <h6><strong class=\\\"tertiary center\\\">\\n      <B>No prescriptions</B>\\n    </strong></h6>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Prescription } from '../model/Prescription';\n\n@Component({\n  selector: 'app-prescription',\n  templateUrl: './prescription.component.html',\n  styleUrls: ['./prescription.component.scss']\n})\nexport class PrescriptionComponent implements OnInit {\n  @Input() prescriptions: Prescription[] = []; \n  private prescriptionDatasource: MatTableDataSource<Prescription> = new MatTableDataSource(); \n  private displayedColumns = [\"no\", \"name\", \"frequency\", \"root\", \"dose\"]; \n\n  ngOnChanges(){\n    this.prescriptionDatasource.data = this.prescriptions;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"titel\\\">\\n  <app-card-title titel=\\\"Patients queue\\\" icon=\\\"launch\\\" (onClick)=\\\"maximaize()\\\"></app-card-title>\\n</div>\\n<mat-list>\\n\\n  <mat-list-item *ngFor=\\\"let queue of queues\\\">\\n    <span id=\\\"id\\\"><pre>{{(queue)?.patient.reg_id}}</pre></span>\\n    <i class=\\\"right small secondery\\\">{{(queue)?.humanWaitingTime}}</i>\\n  </mat-list-item> \\n</mat-list>\\n<div class=\\\"center\\\" *ngIf=\\\"queues.length == 0\\\" style=\\\"margin: 24px 0px; width: 100%; opacity: 0.8\\\">\\n  <h6><strong class=\\\"secondery center\\\"><B>There is no patient in the queue</B></strong></h6>\\n</div>\"","module.exports = \".titel {\\n  width: 100%;\\n  margin-bottom: 16px; }\\n\\n.mat-lit, .mat-list .mat-list-item {\\n  width: 100%;\\n  height: 28px; }\\n\\n.mat-lit .mat-list-item-content, .mat-list .mat-list-item .mat-list-item-content {\\n    padding: 0px !important; }\\n\\n.mat-lit i, .mat-list .mat-list-item i {\\n    position: absolute;\\n    right: 0px; }\\n\\n.mat-lit #id, .mat-list .mat-list-item #id {\\n    font-size: 1rem; }\\n\\n.mat-list-item-content {\\n  padding: 0px !important; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient_queue } from '../model/Patient_queue'; \nimport { PatientQueueService } from '../service/patient-queue.service'; \nimport { Options } from '../model/Options';\nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-queue-min',\n  templateUrl: './queue-min.component.html',\n  styleUrls: ['./queue-min.component.scss']\n})\nexport class QueueMinComponent implements OnInit {\n\n  private queues: Patient_queue[] = []; \n  \n  private options: Options[] = [\n    {icon: \"\", text: \"one\", value: 1, data: \"\"}, \n    {icon: \"\", text: \"two\", value: 2, data: \"\"}, \n    {icon: \"\", text: \"three\", value: 3, data: \"\"}, \n    {icon: \"\", text: \"for\", value: 4, data: \"\"}, \n  ];\n  @Input()\n  set loadTriggr(value){\n    this.load(); \n  }\n  constructor(private _queue: PatientQueueService, private _router: Router) { }\n\n  ngOnInit() {\n    this.load(); \n    setInterval(() => {\n      this.load()\n    }, 10000); \n\n    //console.log(this.options); \n  }\n  \n  load(){\n    this._queue.queue_list(7).subscribe(\n      (responce) => {\n        this.queues = responce; \n      }\n    )\n  }\n\n  maximaize(){\n    this._router.navigate(['/queue']); \n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { PatientQueueService } from '../service/patient-queue.service'; \nimport { Patient_queue } from '../model/Patient_queue'; \n\nexport class QueueDataSource extends DataSource<Patient_queue> {\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private data: Patient_queue[]) {\n    super();\n  }\n\n  connect(): Observable<Patient_queue[]> {\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  disconnect() {}\n\n  private getPagedData(data: Patient_queue[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  private getSortedData(data: Patient_queue[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      const a_name=(a.patient.first_name+\" \"+a.patient.father_name+\" \"+a.patient.grand_father_name); \n      const b_name = (b.patient.first_name+\" \"+b.patient.father_name+\" \"+b.patient.grand_father_name);\n      switch (this.sort.active) {\n        case 'reg_id': return compare(a.patient.reg_id, b.patient.reg_id, isAsc);\n        case 'name': return compare(a_name, b_name, isAsc );\n        case 'humanWaitingTime': return compare(+a.humanWaitingTime, +b.humanWaitingTime, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"mat-elevation-z8 col m8 s12 offset-m2\\\">\\n        <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n          <!-- Id Column -->\\n          <ng-container matColumnDef=\\\"reg_id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Registral id</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.patient.reg_id}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.patient.first_name}} {{row.patient.father_name}} {{row.patient.grand_father_name}} </td>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"humanWaitingTime\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Arrival</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.humanWaitingTime}}</td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n\\n        <mat-paginator #paginator\\n          [length]=\\\"dataSource.data.length\\\"\\n          [pageIndex]=\\\"0\\\"\\n          [pageSize]=\\\"50\\\"\\n          [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n        </mat-paginator>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { QueueDataSource } from './queue-datasource';\nimport { PatientQueueService} from '../service/patient-queue.service'; \nimport { Patient_queue } from '../model/Patient_queue'; \n\n@Component({\n  selector: 'app-queue',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.css']\n})\nexport class QueueComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: QueueDataSource;\n\n  displayedColumns = ['reg_id', 'name', 'humanWaitingTime'];\n\n  constructor(private _queue: PatientQueueService){}\n\n  ngOnInit() {\n    this.dataSource = new QueueDataSource(this.paginator, this.sort, []);\n\n    this._queue.queue_list().subscribe(\n      (responce) => {\n        this.dataSource = new QueueDataSource(this.paginator, this.sort, responce); \n      }\n    )\n  }\n}\n","module.exports = \"<app-card-title id=\\\"title\\\" titel=\\\"Recent visits to physician\\\" (onClick)=\\\"open()\\\" icon=\\\"launch\\\"></app-card-title>\\n<mat-list style=\\\"width: 100%\\\"> \\n  <mat-list-item *ngFor=\\\"let visit of visits\\\">\\n   \\n    <strong> {{visit.physician.first_name + \\\" \\\"+ visit.physician.father_name}}</strong>\\n    <i class=\\\"secondery right\\\">{{visit.humanWaitingTime}}</i>\\n  </mat-list-item>\\n</mat-list>\\n\\n<div class=\\\"container center\\\" *ngIf=\\\"isEmpty\\\" style=\\\"margin: 24px 0px; width: 100%; opacity: 0.8\\\">\\n  <h6><strong class=\\\"secondery center\\\"><B>This is first visit</B></strong></h6>\\n</div>\"","module.exports = \".mat-list-item {\\n  height: 36px !important; }\\n  .mat-list-item i {\\n    position: absolute;\\n    right: 0px;\\n    font-size: .9em; }\\n  #titel {\\n  margin-bottom: 16px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient } from '../model/Patient'; \nimport { PatientService } from '../service/patient.service';\nimport { Patient_queue } from '../model/Patient_queue'; \nimport { PatientQueueService } from '../service/patient-queue.service'; \nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-recent-visits',\n  templateUrl: './recent-visits.component.html',\n  styleUrls: ['./recent-visits.component.scss']\n})\nexport class RecentVisitsComponent implements OnInit {\n\n  private visits: Patient_queue[]; \n  private reg_id: string; \n  private isThereVisit: boolean = false; \n  private isEmpty: boolean = true; \n\n  @Input()\n  set patient(value: Patient){\n    if(value){\n      this.reg_id = value.reg_id; \n      this._queue.visits(value.reg_id, 5).subscribe(\n        (responce) => { \n          this.visits = responce; \n          this.isThereVisit = true; \n          if(responce.length > 0){\n            this.isEmpty = false; \n          }\n        }\n      )\n    }\n  }\n\n  constructor(private _queue: PatientQueueService, private _router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  open(){\n    if(this.reg_id)\n      this._router.navigate(['/visits/'+this.reg_id]); \n  }\n}\n","module.exports = \"<div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n  <div class=\\\"indeterminate\\\"></div>\\n</div>\\n<div class=\\\"form-conatiner\\\" [class.form-loading]=\\\"loading\\\">\\n  <mat-icon matDialogClose class=\\\"right\\\">close</mat-icon> \\n  <header class=\\\"container\\\">\\n      <h5>New patient</h5> \\n  </header>\\n  <div layout layout-fill ng-app=\\\"context-menu\\\">\\n    \\n  <form id=\\\"registartionForm\\\" class=\\\"container\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]='regForm' > \\n    <div class=\\\"row\\\">\\n      <mat-form-field class=\\\"col m4\\\">\\n        <input matInput formControlName=\\\"reg_id\\\" placeholder=\\\"Registral id\\\" class=\\\"browser-default uppercase\\\"> \\n        <mat-error *ngIf=\\\"reg_id.invalid && reg_id.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m5\\\">\\n        <input matInput formControlName=\\\"department\\\"  \\n        [matAutocomplete]=\\\"auto\\\" \\n        (blur) = \\\"validateDepartemet()\\\"\\n        placeholder=\\\"Department\\\" \\n        class=\\\"browser-default capitalize\\\" > \\n        <mat-error *ngIf=\\\"department.errors?.required && department.touched\\\">\\n          This field is required\\n        </mat-error>\\n        <mat-error *ngIf=\\\"department.errors?.invalidDep && department.touched\\\">\\n          There is no such a department\\n        </mat-error>\\n      </mat-form-field>\\n        <!-- DEPARTMENT AUTO COMPLET -->\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" style=\\\"\\\">\\n          <mat-option *ngFor=\\\"let department of autoDepartments\\\" [value]=\\\"department.name\\\">\\n            {{department.name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n\\n      <mat-form-field class=\\\"col m3\\\">\\n        <input matInput formControlName=\\\"accadamic_year\\\" placeholder=\\\"Batch\\\" class=\\\"browser-default\\\"> \\n        <mat-error *ngIf=\\\"accadamic_year.invalid && accadamic_year.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field  class=\\\"col m6\\\">\\n        <input matInput formControlName=\\\"first_name\\\" placeholder=\\\"First Name\\\" class='capitalize'>\\n       \\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m6\\\">\\n        <input matInput formControlName='father_name' placeholder=\\\"Father Name\\\" class='capitalize'>\\n        <mat-error *ngIf=\\\"father_name.invalid && father_name.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m12\\\">\\n        <input matInput formControlName=\\\"grand_father_name\\\" placeholder=\\\"Grand Father Name\\\" class='capitalize'> \\n        <mat-error *ngIf=\\\"grand_father_name.invlaid && grand_father_name.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m4\\\">\\n        <mat-select formControlName=\\\"gender\\\" placeholder=\\\"Gender\\\">\\n          <mat-option value=\\\"Male\\\">Male</mat-option>\\n          <mat-option value=\\\"Female\\\">Female</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"gender.invlaid && gender.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m4\\\">\\n        <input matInput formControlName=\\\"dorm_block\\\" placeholder=\\\"Block\\\" class=\\\"browser-default\\\"> \\n        <mat-error *ngIf=\\\"dorm_block.invalid && dorm_block.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m4\\\">\\n        <input matInput formControlName=\\\"dorm_room_number\\\" placeholder=\\\"Dorm\\\" class=\\\"browser-default\\\"> \\n        <mat-error *ngIf=\\\"dorm_room_number.invalid && dorm_room_number.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col m12\\\">\\n        <input matInput formControlName=\\\"birth_date\\\" placeholder=\\\"Birth date\\\" [matDatepicker]=\\\"birthDate\\\"> \\n        <mat-datepicker-toggle matSuffix [for]=\\\"birthDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #birthDate></mat-datepicker>\\n        <mat-error *ngIf=\\\"birth_date.invalid && birth_date.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field> \\n\\n      <mat-form-field class=\\\"col m12\\\">\\n        <input matInput formControlName=\\\"phone\\\" placeholder=\\\"phone\\\" > \\n        <mat-error *ngIf=\\\"phone.invalid && phone.touched\\\">\\n          This field is required\\n        </mat-error>\\n      </mat-form-field> \\n\\n      <div class=\\\"col m12\\\">\\n        <button type=\\\"submit\\\" [disabled]='regForm.invalid' class=\\\"weves-effect weves-light btn blue white-text right\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, Input, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'; \nimport { FormGroup, FormBuilder , Validators} from '@angular/forms';\nimport { Router } from '@angular/router'; \n\nimport { RoleService } from '../service/role.service'; \nimport { PatientService } from '../service/patient.service'; \nimport { CommonMessageService as Message }  from '../service/common-message.service'; \n\nimport { User } from '../model/User'; \nimport { Department } from '../model/Department'; \n\ndeclare var M; \ndeclare var S; \n\n@Component({\n  selector: 'app-registeration-form',\n  templateUrl: './registeration-form.component.html',\n  styleUrls: ['./registeration-form.component.scss'],\n  providers: [RoleService,PatientService], \n})\nexport class RegisterationFormComponent implements OnInit {\n\n  public loading = false; \n  public regForm: FormGroup; \n  public roles: object; \n  public regOprationMode = 'new'; \n  private departments: Department[] = []; \n  private autoDepartments: Department[] = []; \n  @Input()\n  set value(user: User) {\n    this.regForm.setValue(user); \n  }\n\n  constructor(\n    public thisDialog: MatDialogRef<RegisterationFormComponent>, \n    @Inject(MAT_DIALOG_DATA) public data:any, \n    public formBuilder: FormBuilder, \n    public _route: Router, \n    public _patient: PatientService, \n    public _message: Message\n  ) { }\n\n  ngOnInit() {\n    this.regForm = this.formBuilder.group({\n      id:[''],\n      reg_id: ['', [Validators.required]], \n      department: ['', [Validators.required]], \n      accadamic_year: ['', [Validators.required]], \n      first_name: ['', [Validators.required]], \n      father_name: ['', [ Validators.required]], \n      grand_father_name: ['', [Validators.required]], \n      gender: ['', [Validators.required]],\n      dorm_block: ['', [Validators.required]], \n      dorm_room_number: ['', [Validators.required]], \n      birth_date: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n    }); \n    if(typeof this.data.patient !== 'undefined'){\n      this.regForm.patchValue(this.data.patient);\n      this.regForm.controls.department.patchValue(this.data.patient.department.name); \n      this.regOprationMode = 'update'; \n    } \n\n    this._patient.departments().subscribe(\n      responce => {\n        this.departments = responce;\n        this.autoDepartments = responce;  \n      }\n    )\n\n    this.regForm.controls.department.valueChanges.subscribe(\n      (value) => {\n        this.filter(value); \n      }\n    )\n    // this.regForm.valueChanges.subscribe(\n    //   (value) => { console.log(value); }\n    // ); \n  }\n\n  filter(input: string){\n    console.log(input); \n    if(input == \"\"){\n      this.autoDepartments = this.departments; \n      return; \n    }\n    let start = this.departments.filter((val)=>{ \n      return S(val.name.toLocaleLowerCase()).startsWith(input.toLocaleLowerCase()); \n    }); \n    const notStart = this.departments.filter((val)=>{ \n      return !S(val.name.toLocaleLowerCase()).startsWith(input.toLocaleLowerCase()); \n    }); \n    let contain = notStart.filter((val) => {\n      return S(val.name.toLocaleLowerCase()).include(input.toLocaleLowerCase()); \n    }) \n    this.autoDepartments = start.concat(contain); \n  }\n\n  validateDepartemet(){\n    const inputValue = this.regForm.controls.department.value;\n    const count = this.departments.filter((val)=>{\n        return val.name.toLowerCase() == inputValue.toLocaleLowerCase(); \n    }).length; \n    if(length < 1 && inputValue != \"\"){\n      this.regForm.controls.department.setErrors({'invalidDep': true}); \n    } \n    \n  }\n  onSubmit(){\n    this.loading = true; \n    if(this.regOprationMode != 'update'){\n      this._new(); \n    }else{\n      this.update(); \n    } \n     \n  }\n  _new(){\n    this._patient.create(this.regForm.value).subscribe(\n      responce => {\n        // this._route.navigate(['/'+responce.reg_id]);\n        this.thisDialog.close({responce:true,opration:'create', data: responce});\n        this._message.httpSuccess('created account for <b> '+responce.first_name);\n      }, \n      error => {\n        this.loading = false;\n        this._message.httpError({responce:false, operation:'create',data: error}); \n      }\n    ) \n  }\n  update(){\n    this._patient.update(this.regForm.value.id, this.regForm.value).subscribe(\n      responce => {\n        this.thisDialog.close({responce:true,opration:'update', data: responce});\n        this._message.httpSuccess('Edited profile of <b> '+responce.first_name);\n      }, \n      error => {\n        this.loading = false;\n        this._message.httpError({responce:false, operation:'update',data: error}); \n      }\n    )  \n  }\n  get reg_id(){return this.regForm.get(\"reg_id\"); }\n  get department(){return this.regForm.get(\"department\"); }\n  get accadamic_year(){return this.regForm.get(\"accadamic_year\"); }\n  get first_name(){return this.regForm.get(\"first_name\"); }\n  get father_name(){return this.regForm.get(\"father_name\"); }\n  get grand_father_name(){return this.regForm.get(\"grand_father_name\"); }\n  get gender(){return this.regForm.get(\"gender\"); }\n  get dorm_room_number(){return this.regForm.get(\"dorm_room_number\"); }\n  get dorm_block(){return this.regForm.get(\"dorm_block\"); }\n  get birth_date(){return this.regForm.get(\"birth_date\"); }\n  get phone(){return this.regForm.get(\"phone\"); }\n}\n","module.exports = \"<div>\\n<mat-form-field>\\n  <input matInput \\n  [formControl]=\\\"room\\\" \\n  type=\\\"number\\\"\\n  min=\\\"0\\\" \\n  style=\\\"width: 100%\\\" \\n  placeholder=\\\"Room number\\\"\\n  (blur)=\\\"changeRoomNumber()\\\">\\n</mat-form-field>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms'; \nimport { UserService } from '../service/user.service'; \nimport { CommonMessageService } from '../service/common-message.service'; \n\n@Component({\n  selector: 'app-room-number',\n  templateUrl: './room-number.component.html',\n  styleUrls: ['./room-number.component.scss']\n})\nexport class RoomNumberComponent implements OnInit {\n\n  private room: FormControl = new FormControl(); \n\n  @Input()\n  set roomNumber(value: number){\n    console.log(value); \n    this.room.setValue(value); \n  }\n\n  @Output() status = new EventEmitter(); \n\n  constructor(private _user: UserService, private _message: CommonMessageService) { }\n\n  ngOnInit() {\n  }\n\n  changeRoomNumber(){\n    this._user.roomNumber(this.room.value).subscribe(\n      (user) => {\n        this._message.httpSuccess(\"Your room number is set \"+ user.room_number); \n        this.status.emit('success'); \n      },\n      (error) => {\n        this._message.httpError(error); \n        this.status.emit('error'); \n      }\n    ); \n  }\n}\n","import { Routes } from '@angular/router'; \nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component'; \nimport { UserProfileRouteComponent } from './user-profile-route/user-profile-route.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ChangePasswordRouteComponent } from './change-password-route/change-password-route.component';\nimport { QueueComponent } from './queue/queue.component'; \nimport { VisitsComponent } from './visits/visits.component';\nimport { RouteComponent as UploadProfile } from './upload_profile_pic/route/route.component'; \nimport { LabResponceComponent } from './lab-responce/lab-responce.component';\nimport { ViewHisstoryComponent } from './view-hisstory/view-hisstory.component';\n\nexport const appRoutes: Routes = [\n    {path: '', component: DashboardComponent },\n    {path: 'hisstory/:hisstory_id', component: DashboardComponent }, \n    {path: 'users', component: UsersComponent },\n    {path: 'settings', component: SettingsComponent }, \n    //{path: ':worker_id', component: UserProfileRouteComponent}, \n    {path: 'queue', component: QueueComponent },\n    {path: 'visits/:reg_id', component: VisitsComponent},\n    {path: 'search/:reg_id', component: DashboardComponent}, \n    {path: 'settings/change profile picture', component: UploadProfile },\n    {path: 'settings/change password', component: ChangePasswordRouteComponent },\n    {path: 'lab/result/:queue_id', component: LabResponceComponent}, \n    {path: 'view/hisstroy/:queue_id', component:ViewHisstoryComponent }, \n]; ","module.exports = \"<div id='saved-stats-bar'>\\n  <div \\n  *ngFor=\\\"let queue of savedQueues\\\"\\n  [style.width]=\\\"width\\\" \\n  id=\\\"tab\\\" \\n  [class.active]=\\\"queue.id == active\\\"\\n  (click)=\\\"$open(queue)\\\">\\n    <ul>\\n      <li>.</li>\\n      <li>{{queue.patient.reg_id}}</li>\\n      <li>.</li>\\n    </ul>\\n  </div> \\n</div>\\n\"","module.exports = \"#saved-stats-bar {\\n  height: 30px;\\n  width: 100%;\\n  position: fixed;\\n  bottom: 0px;\\n  background-color: #dddddd;\\n  border: none;\\n  text-align: right; }\\n\\n#tab {\\n  display: inline-block;\\n  line-height: 2;\\n  text-align: center;\\n  width: 150px;\\n  cursor: pointer; }\\n\\n#tab ul {\\n    margin: 0px;\\n    width: 100%; }\\n\\n#tab ul li {\\n      display: inline-block; }\\n\\n#tab ul li:first-child, #tab ul li:last-child {\\n      width: 5%;\\n      background: #dddddd;\\n      color: #dddddd; }\\n\\n#tab:not(.active) {\\n  border-left: 1px solid #dedede; }\\n\\n.active ~ #tab {\\n  border-top-left-radius: 8px; }\\n\\n.active {\\n  background-color: white;\\n  border-bottom-left-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n  background: linear-gradient(white, #dddddd);\\n  background: -webkit-linear-gradient(white, #dddddd); }\\n\\n.active ul {\\n    margin: 0px;\\n    width: 100%; }\\n\\n.active ul li {\\n      display: inline-block;\\n      width: 90%;\\n      background: white; }\\n\\n.active ul li:first-child, .active ul li:last-child {\\n      width: 5%;\\n      background: #dddddd;\\n      color: #dddddd; }\\n\\n.active ul li:first-child {\\n      border-top-right-radius: 8px; }\\n\\n.active ul li:last-child {\\n      border-top-left-radius: 8px; }\\n\\n.active ul li:nth-child(2) {\\n      border-bottom-left-radius: 8px;\\n      border-bottom-right-radius: 8px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PatientQueueService } from '../service/patient-queue.service';\nimport { Patient_queue } from '../model/Patient_queue';\n\nenum Operation{\n    NEXT, THIS, PREVIOUS, CHOOSE_SIDE\n}\n@Component({\n  selector: 'app-saved-states',\n  templateUrl: './saved-states.component.html',\n  styleUrls: ['./saved-states.component.scss']\n})\n\nexport class SavedStatesComponent implements OnInit {\n\n  private active: number; \n\n\n  @Output() open: EventEmitter<Patient_queue> = new EventEmitter<Patient_queue>(); \n  @Input() activeQueueId: number;\n  @Input() update: number; \n  @Input() \n  set next(value: number){\n    if(value > 0)\n      this.getSaved(Operation.CHOOSE_SIDE); \n  }\n  \n  \n  private savedQueues: Patient_queue[] = []; \n  constructor(private _queue: PatientQueueService) { }\n\n  ngOnChanges(){\n    if(typeof this.activeQueueId === 'undefined'){\n      this.active = -1; \n    }else{\n      this.active = this.activeQueueId; \n    }\n    this.getSaved();\n  }\n  ngOnInit() {\n    this.getSaved(); \n    setInterval(()=>{\n        this.getSaved(); \n      }, 10000);\n  }\n  \n  $next(){\n   \n    let $found = this.savedQueues.find((e)=>{return (e.id == this.active); }); \n    let index = this.savedQueues.indexOf($found); \n    let _next: Patient_queue; \n   \n    if(this.savedQueues.length >= 1){\n      \n       if(index < this.savedQueues.length){\n        index++; \n        _next = this.savedQueues[index]; \n      }else if(index >= 0){\n        index--; \n        _next = this.savedQueues[index]; \n      }else{\n        _next = null; \n      }\n    }else{  _next = null; }\n   \n    this.$open(_next);\n\n  }\n  getSaved( operation = Operation.THIS){\n    this._queue.saved().subscribe(\n        queues => {\n          this.savedQueues = queues; \n          if(operation == Operation.CHOOSE_SIDE){\n            this.$next(); \n          }\n        });    \n  }\n\n  $open(queue: Patient_queue){\n    this.open.emit(queue); \n  }\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var M; \n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonMessageService {\n\n  constructor() { }\n  httpError(error){\n    let message = ''; \n\n    if(error.status == 0) message = \"Error: Please check your connection!\"; \n    else if(error.status == 406) message = \"Error: \" + error.message; \n    else if(error.status == 500 ) message = \"Error: we have got some problem please try again letter\"; \n    else message = \"Some error occured\"; \n    \n    M.toast({\n      classes: 'red white-text', \n      html: '<strong>'+ message +'</strong>'\n    })\n  }\n  \n  httpSuccess(message = \"made the request\"){\n    M.toast({\n      classes: 'green white-text', \n      // @ts-ignore\n      html: \"<strong>You have succefully \"+ message +\" </b></strong>\"\n    }) \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/User'; \nimport { Hisstory } from '../model/Hisstory';\nimport { Diagnosis } from '../model/Diagnosis';\nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HisstoryService {\n\n  constructor(public _http: HttpClient) { }\n\n  private root = RootURL;  \n\n  chif_complient(hisstory_id: number, complient: string){\n    const URL = this.root+\"/ajax/update/hisstory/chief_complient/\"+hisstory_id; \n    return this._http.put(URL, {chief_complient: complient}); \n  }\n\n  metrix(hisstory_id: number, matrix: Hisstory){\n    const URL = this.root+\"/ajax/update/hisstory/metrics/\"+hisstory_id; \n    return this._http.put(URL, matrix); \n  }\n\n  getDiagnosises(key: string): Observable<Diagnosis[]>{\n    const URL = this.root+\"/ajax/get/diagnosises/search/auto/\"+key; \n    return this._http.get<Diagnosis[]>(URL); \n  }\n\n  diagnosises(hisstory_id: number, diagnosises: Diagnosis[]): Observable<Diagnosis[]>{\n    const URL = this.root + \"/ajax/post/diagnosises/new/\"+hisstory_id; \n    return this._http.post<Diagnosis[]>(URL, {diagnosises: diagnosises}); \n  }\n\n  viewHisstroy(queue_id: number): Observable<Hisstory>{\n    const URL  = this.root + \"/ajax/get/hisstory/view/\"+queue_id; \n    return this._http.get<Hisstory>(URL); \n  }\n\n  close(queue_id: number): Observable<boolean>{\n    const URL = this.root + \"/ajax/update/hisstory/close/\"+queue_id; \n    return this._http.put<boolean>(URL, {}); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/User'; \nimport { Laboratory } from '../model/Laboratory';\nimport { Laboratory_test } from '../model/Laboratory_test';\nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LaboratoryService {\n\n  constructor(private _http: HttpClient) { }\n  private root = RootURL;  \n\n  $new(hisstory_id: number, request: Laboratory[]){\n    const URL = this.root+\"/ajax/post/lab/request\"; \n    return this._http.post(URL , request); \n  }\n\n  autoComplet(key: string): Observable<Laboratory_test[]>{\n    const URL = this.root+\"/ajax/get/lab/search/auto/\"+key; \n    return this._http.get<Laboratory_test[]>(URL); \n  }\n\n  search(key: string): Observable<Laboratory>{\n    const URL = this.root+\"/ajax/get/lab/search/\"+key; \n    return this._http.get<Laboratory>(URL); \n  }\n\n  request(test: Laboratory_test[], id: number){\n    const URL = this.root+\"/ajax/post/lab/request\";\n    return this._http.post(URL, {requests: test,hisstory_id: id} );  \n  }\n\n  getRequests(queue_id: number): Observable<Laboratory[]>{\n    const URL  = this.root+\"/ajax/get/lab/requests/\"+queue_id; \n    return this._http.get<Laboratory[]>(URL); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Patient } from '../model/Patient';\nimport { Patient_queue } from '../model/Patient_queue'; \nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientQueueService {\n\n  constructor(public _http: HttpClient) { }\n  \n  private root = RootURL;  \n\n  queue(patient_id: number): Observable<Patient_queue>{\n    const URL = this.root+\"/ajax/post/queue/add/\"+patient_id; \n    return this._http.post<Patient_queue>(URL, {}); \n  }\n\n  dequeue(patient_id: number): Observable<Patient>{\n    const URL = this.root+\"/ajax/post/queue/remove\"+patient_id; \n    return this._http.put<Patient>(URL, {}); \n  }\n\n  remove(patinet_id: number): Observable<Patient>{\n    const URL = this.root+\"/ajax/delete/queue/\"+patinet_id; \n    return this._http.delete<Patient>(URL, {}); \n  }\n\n  visits(patient_regId: string, limit: number = -1): Observable<Patient_queue[]>{\n    const URL = this.root+\"/ajax/get/queue/visits/\"+patient_regId+\"/\"+limit; \n    return this._http.get<Patient_queue[]>(URL); \n  }\n\n  queue_list(limit = -1): Observable<Patient_queue[]>{\n    const URL = this.root+\"/ajax/get/queue/patients in queue/\"+limit;\n    return this._http.get<Patient_queue[]>(URL); \n  }\n\n  isQueued(patient_id: number): Observable<number>{\n    const URL = this.root+\"/ajax/get/queue/is in queue/\"+patient_id; \n    return this._http.get<number>(URL); \n  }\n\n  next(): Observable<Patient_queue>{\n    const URL = this.root+\"/ajax/get/queue/next\"; \n    return this._http.get<Patient_queue>(URL); \n  }\n\n  getQueue(queue_id: number): Observable<Patient_queue>{\n    const URL = this.root+\"/ajax/get/queue/get/\"+queue_id; \n    return this._http.get<Patient_queue>(URL); \n  }\n\n  saved(): Observable<Patient_queue[]>{\n    const URL = this.root+\"/ajax/get/queue/saved\";\n    return this._http.get<Patient_queue[]>(URL); \n  }\n\n  isEmpty(): Observable<boolean>{\n    const URL = this.root+\"/ajax/get/queue/isEmpty\"; \n    return this._http.get<boolean>(URL); \n  }\n\n  call(queue_id: number): Observable<boolean>{\n    const URL = this.root+\"/ajax/post/queue/call/\"+queue_id; \n    return this._http.post<boolean>(URL, {}); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Patient } from '../model/Patient'; \nimport { Department } from '../model/Department';\nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  constructor(public _http: HttpClient) { }\n\n  private root = RootURL;  \n\n  create(patient:Patient): Observable<Patient>{\n    const URL = this.root+\"/ajax/post/patient/new\"; \n    return this._http.post<Patient>(URL, patient); \n  }\n\n  update(id: number, patient: Patient): Observable<Patient>{\n    const URL = this.root+\"/ajax/update/patient/\"+id; \n    return this._http.put<Patient>(URL, patient); \n  }\n\n  delete(id: number){\n    const URL = this.root+\"/ajax/delete/patient/\"+id; \n    return this._http.delete(URL); \n  }\n\n  autoComplete(key:string): Observable<Patient[]>{\n    const URL = this.root+\"/ajax/get/search/auto complete/\"+key;\n    return this._http.get<Patient[]>(URL); \n  }\n\n  search(key:string): Observable<Patient>{\n    const URL = this.root+\"/ajax/get/search/\"+key;\n    return this._http.get<Patient>(URL); \n  }\n\n  departments(): Observable<Department[]>{\n    const URL = this.root+\"/ajax/get/departments\"; \n    return this._http.get<Department[]>(URL); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Drug } from '../model/Drug';\nimport { Prescription } from '../model/Prescription';\nimport { Drug_frequency } from '../model/Drug_frequency';\nimport { Drug_root } from '../model/Drug_root';\nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PharmacyService {\n\n  constructor(private _http: HttpClient) { }\n  private root = RootURL;  \n\n  drugAutoComplet(key: string): Observable<Drug[]>{\n    const URL = this.root+\"/ajax/get/pharmacy/drug/search/auto/\"+key; \n    return this._http.get<Drug[]>(URL); \n  }\n\n  prescribe(hisstroy_id, prescriptions): Observable<Prescription[]>{\n    const URL = this.root+\"/ajax/post/pharmacy/prescription/prescribe/\"+hisstroy_id; \n    return this._http.post<Prescription[]>(URL, {prescriptions: prescriptions}); \n  }\n\n  getFrequencies():Observable<Drug_frequency[]>{\n    const URL = this.root+\"/ajax/get/pharmacy/drug/frequencies\"; \n    return this._http.get<Drug_frequency[]>(URL); \n  }\n\n  getRoots():Observable<Drug_root[]>{\n    const URL = this.root+\"/ajax/get/pharmacy/drug/roots\"; \n    return this._http.get<Drug_root[]>(URL); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  private root = RootURL;  \n  constructor(public http:HttpClient) { }\n  getRoles(){\n    let $url = this.root+\"/ajax/get/roles except admin\"; \n    return this.http.get($url); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/User'; \nimport { Pagination } from '../model/Pagination'; \nimport { RootURL } from '../model/RootURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n\n  private root = RootURL;  \n  constructor(public http:HttpClient) { }\n\n  postCreateUser(data): Observable<User>{\n    let $url = this.root+\"/ajax/post/create user\"; \n    return this.http.post<User>($url,data); \n  }\n  \n  updateUser(data): Observable<User>{\n    let $url = this.root+\"/ajax/update/user\"; \n    return this.http.put<User>($url, data); \n  }\n  \n  authUser(): Observable<User>{\n    let $url = this.root+\"/ajax/get/auth user\"\n    return this.http.get<User>($url); \n  }\n\n  getUsers(pagination = 25, from = 1): Observable<User[]>{\n    let $url = this.root+\"/ajax/get/users\"; \n    return this.http.get<User[]>($url); \n  }\n\n  totalUsers(): Observable<number>{\n    let $url = this.root+ \"/ajax/get/total users\"; \n    return this.http.get<number>($url); \n  }\n\n  userProfile(workerId): Observable<User>{\n    let $url = this.root+\"/ajax/get/user profile/\"+workerId; \n    return this.http.get<User>($url);\n  }\n  \n  deleteUser(id): Observable<number>{\n    let $url = this.root+\"/ajax/delete/user/\"+id; \n    return this.http.delete<number>($url); \n  }\n\n  currentPassword(password): Observable<boolean>{\n    let $url = this.root+\"/ajax/post/isCurrentPassword\";\n    return this.http.post<boolean>($url, {currentPassword: password});\n  }\n  \n  changePassword(current: string, newPassword: string): Observable<boolean> {\n    let $url = this.root+\"/ajax/update/password\"; \n    return this.http.put<boolean>($url , {currentPassword:current, newPassword: newPassword}); \n  }\n\n  roomNumber(number: number): Observable<User>{\n    let $url = this.root+\"/ajax/update/room number/\"+number; \n    return this.http.put<User>($url, {});\n  }\n\n  uploadPic(img: File): Observable<User>{\n    let $url = this.root + \"/ajax/file/upload/profile pic\" \n    const fd = new FormData(); \n    fd.append('image', img, img.name); \n    return this.http.post<User>($url, fd); \n  }\n  logout():Observable<Logout>{\n    let $url = this.root + \"/ajax/post/logout\"; \n    return this.http.post<Logout>($url, {}); \n  }\n}\n  interface Logout{\n    redirectTo\n  }\n","module.exports = \"<section class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 m6 l6 offset-m3 offset-l3\\\">\\n      <mat-card>\\n        <mat-list>\\n          <mat-list-item routerLink=\\\"change password\\\" class=\\\"waves-effect\\\"><i class=\\\"material-icons\\\">vpn_key</i> <p>Change password</p></mat-list-item>\\n          <mat-list-item routerLink=\\\"change profile picture\\\" class=\\\"waves-effect\\\"><i class=\\\"material-icons\\\">account_circle</i><p>Change profile picture</p></mat-list-item>\\n          <mat-list-item (click)=\\\"goto('change password')\\\" class=\\\"waves-effect\\\"><i class=\\\"material-icons\\\">vpn_key</i></mat-list-item>\\n          <mat-list-item (click)=\\\"goto('change password')\\\" class=\\\"waves-effect\\\"><i class=\\\"material-icons\\\">vpn_key</i></mat-list-item>\\n        </mat-list>\\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\"","module.exports = \".mat-list-item p {\\n  margin-left: 7%; }\\n\\n.mat-card {\\n  padding: 0px;\\n  padding-top: 6%;\\n  padding-bottom: 6%;\\n  margin-top: 15%; }\\n\\n.mat-list-item {\\n  padding-left: 5%; }\\n\\n.mat-list-item:hover {\\n  background-color: #dbdbdb; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor(public _route: Router) { }\n\n  ngOnInit() {\n  }\n  goto(loc){\n    this._route.navigate(['/settings/'+loc]);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"step == 0\\\">\\n    <app-change-password (status)=\\\"updateStatus($event)\\\"></app-change-password>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"step == 1\\\">\\n    <app-upload (status)=\\\"updateStatus($event)\\\"></app-upload>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"step == 2\\\">\\n    <section id=\\\"welcome\\\">\\n      <h3>Well come</h3>\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"dialogRef.close()\\\">CONTINUE</button>\\n    </section>\\n  </div>\\n</div>\\n\"","module.exports = \"#welcome {\\n  text-align: center; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material'; \nimport { MatDialogRef } from '@angular/material'; \n\n@Component({\n  selector: 'app-setup-dialog',\n  templateUrl: './setup-dialog.component.html',\n  styleUrls: ['./setup-dialog.component.scss']\n})\nexport class SetupDialogComponent implements OnInit {\n\n  private step: number; \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any, \n    public dialogRef: MatDialogRef<SetupDialogComponent>\n  ) { }\n\n  ngOnInit() {\n    this.step = this.data.step; \n  }\n\n  updateStatus(status){\n    if(status){\n      this.step++; \n    }\n  }\n\n}\n","module.exports = \"<ul id=\\\"slide-out\\\" class=\\\"sidenav\\\">\\n    <li><div class=\\\"user-view\\\">\\n      <div class=\\\"background\\\">\\n        <img [src]=\\\"profilePic\\\">\\n      </div>\\n      <a href=\\\"#user\\\"><img class=\\\"circle\\\" [src]=\\\"profilePic\\\"></a>\\n      <a href=\\\"#name\\\"><span class=\\\"white-text name\\\">{{($auth)?.first_name}} {{($auth)?.father_name}}</span></a>\\n      <a href=\\\"#email\\\"><span class=\\\"white-text email\\\">{{($auth)?.worker_id}}</span></a>\\n    </div></li>\\n    <li><a href=\\\"#\\\" style=\\\"padding-right: 0px\\\"><i class=\\\"material-icons\\\">mail_outline</i>{{ ($auth)?.email }}</a></li>\\n    <li><a href=\\\"#\\\"><i class=\\\"material-icons\\\">phone</i>{{ ($auth)?.phone }}</a></li>\\n    <li><div class=\\\"divider\\\"></div></li>\\n    <li><a class=\\\"subheader\\\"></a></li>\\n    <li><a class=\\\"waves-effect\\\" routerLink=\\\"/settings\\\"><i class=\\\"material-icons\\\">settings</i>Setings</a></li>\\n    <li><a class=\\\"waves-effect\\\" (click)=\\\"logout()\\\"><i class=\\\"material-icons\\\">launch</i>Log out</a></li>\\n  </ul>\"","module.exports = \".background > img {\\n  position: relative;\\n  width: 300px;\\n  filter: blur(5px);\\n  -webkit-filter: blur(5px); }\\n\\n.user-view .white-text {\\n  font-size: 1.1em;\\n  text-shadow: 0 0 11px #000, 0 0 15px #000; }\\n\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { UserService } from '../service/user.service'; \nimport { User } from '../model/User'; \n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  providers: [UserService]\n})\nexport class SidenavComponent implements OnInit {\n  \n  @ViewChild('profileImageContainer') profileImageContainer; \n  @Input() $auth: User; \n  @Input() profilePic: string; \n\n  constructor(public _user: UserService) {\n     \n  }\n\n  ngOnInit() {\n   \n  }\n\n  logout(){\n    this._user.logout().subscribe(\n      success =>{\n        window.location.href = success.redirectTo; \n      }\n    ); \n  }\n}\n","module.exports = \"<section>\\n  <mat-card style=\\\"margin: 10%\\\">\\n    <div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n      <div class=\\\"indeterminate\\\"></div>\\n    </div>\\n    <div [class.form-loading]=\\\"loading\\\">\\n      <h3 class=\\\"center\\\">Wellcome</h3>\\n      <h6 class=\\\"center\\\">Do you want to start treatement?</h6>\\n      <br>\\n      <div style=\\\"width: 80%; margin:auto\\\">\\n        <!-- <app-room-number \\n        (status)=\\\"onStatus($event)\\\" \\n        [roomNumber]=\\\"($auth)?.room_number\\\"\\n        ></app-room-number>            -->\\n      </div>\\n      \\n      <div style=\\\"width: 100%; text-align: center;\\\">\\n        <!-- <button mat-flat-button color=\\\"primary\\\" (click)=\\\"next()\\\">Start</button> -->\\n      </div>\\n    </div> \\n  </mat-card>\\n </section>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 m6 l6 offset-m3 offset-l3\\\">\\n        <mat-card class=\\\"form-container\\\" >\\n          <div class=\\\"progress\\\" [class.hide]=\\\"!loading\\\" >\\n            <div class=\\\"indeterminate\\\"></div>\\n          </div>\\n          <app-upload (status)=\\\"onUpload()\\\"></app-upload>\\n        </mat-card>\\n    </div>\\n  </div>\\n</section>\"","module.exports = \".mat-card {\\n  margin-top: 15%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../model/User';\n\n@Component({\n  selector: 'app-route',\n  templateUrl: './route.component.html',\n  styleUrls: ['./route.component.scss']\n})\nexport class RouteComponent implements OnInit {\n\n  private loading = false; \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onUpload(observ: string){\n    this.loading = ('waiting' == observ); \n  }\n}\n","module.exports = \"<section>\\n  <div id=\\\"profile\\\">\\n    <img [src]=\\\"pic\\\"/>\\n  </div>\\n  <input type=\\\"file\\\" hidden #image (change)=\\\"selected($event)\\\">\\n  <button mat-flat-button (click)=\\\"image.click()\\\" color=\\\"primary\\\">Upload profile picture</button>\\n</section>\"","module.exports = \"section {\\n  width: 100%;\\n  text-align: center; }\\n\\n#profile img {\\n  width: 150px;\\n  height: 150px;\\n  border-radius: 50%; }\\n\"","import { Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { UserService } from '../../service/user.service'; \nimport { Observable } from 'rxjs';\nimport { User } from '../../model/User';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss']\n})\nexport class UploadComponent implements OnInit {\n\n  private pic: string =  \"/storage/avatar.jpg\"; \n  @Output() status = new EventEmitter(); \n\n  constructor(private _user: UserService) { }\n\n  ngOnInit() {\n    this._user.authUser().subscribe(\n      result => {\n        this.pic = result.profile_pic; \n      }\n    );\n  }\n\n  selected(img){\n    const obs = this._user.uploadPic(img.target.files[0]);\n    this.status.emit('waiting');\n    obs.subscribe(\n      (user) => {\n        this.pic = user.profile_pic; \n        this.status.emit(true);\n      }\n    )\n  }\n}\n","module.exports = \"<app-user-profile [user]='data.user' ></app-user-profile>\"","module.exports = \".mat-card {\\n  padding-left: 0px;\\n  padding-right: 0px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-user-profile-modal',\n  templateUrl: './user-profile-modal.component.html',\n  styleUrls: ['./user-profile-modal.component.scss']\n})\nexport class UserProfileModalComponent implements OnInit {\n\n  constructor(\n    public thisDialog: MatDialogRef<UserProfileModalComponent>, \n    @Inject(MAT_DIALOG_DATA) public data:any, \n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"container\\\">\\n  <app-user-profile [user]=\\\"user\\\" ></app-user-profile>\\n</mat-card>\"","module.exports = \".mat-card {\\n  padding-left: 0px;\\n  padding-right: 0px;\\n  margin-top: 10%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { UserService } from \"../service/user.service\"; \nimport { User } from \"../model/User\";\n\n@Component({\n  selector: 'app-user-profile-route',\n  templateUrl: './user-profile-route.component.html',\n  styleUrls: ['./user-profile-route.component.scss']\n})\nexport class UserProfileRouteComponent implements OnInit {\n  public user: User; \n  public param;\n  \n  constructor(\n    private route: ActivatedRoute, \n    private _user: UserService) { \n      this.route.params.subscribe( param => {\n        this._user.userProfile(param.worker_id).subscribe(\n          (responce: User) => {\n            this.user = responce;\n          }\n        ) \n      })\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section class=\\\"container\\\" style=\\\"margin:auto\\\" id=\\\"primary-profile\\\"> \\n    <div class=\\\"row center-align\\\" styel=\\\"margin-bottom\\\" >\\n        <div class=\\\"col m6 s12 align-right\\\" id=\\\"primary-profile-pic\\\">\\n            <img [src]=\\\"'http://clinic.com/img/'+(user)?.profile_pic\\\" alt=\\\"\\\" class=\\\"profile-pic circle responsive-img\\\"> \\n        </div>\\n        <div class=\\\"col m6 s12 align-left\\\" id=\\\"primary-profile-text\\\" >\\n            <div>\\n                <strong> {{(user)?.first_name +\\\" \\\"+ (user)?.father_name +\\\" \\\"+ (user)?.grand_father_name | uppercase }}</strong>\\n                <span class=\\\"secondery\\\" style=\\\"display: block\\\">{{ (((user)?.gender) == 'male')?'He ':'She ' +' workes as '+ (user)?.role }}</span>\\n                <span class=\\\"small secondery\\\" style=\\\"display:block\\\">Woeker id {{ (user)?.worker_id }}</span>   \\n            </div>              \\n        </div>\\n        \\n    </div>\\n    <div class=\\\"row\\\" id=\\\"personal-profile\\\">\\n\\n        <div class=\\\"col m6 s12\\\">\\n            <div>\\n                \\n                <div><span class=\\\"material-icons\\\">mail_outline</span></div><div><span>{{(user)?.email}}</span></div> \\n            </div>\\n            \\n        </div>\\n        <div class=\\\"col m6 s12\\\"> \\n            <div>\\n                \\n                    <div><span class=\\\"material-icons\\\">phone</span> </div><div><span>{{(user)?.phone}}</span></div>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</section>\\n\\n\"","module.exports = \".profile-pic {\\n  width: 150px; }\\n\\n.row:first-child {\\n  margin-bottom: 0px; }\\n\\n#primary-profile-text {\\n  text-align: left; }\\n\\n#primary-profile-pic {\\n  text-align: right; }\\n\\n#personal-profile {\\n  margin-top: 5%; }\\n\\n#personal-profile div.col {\\n    padding: 3px; }\\n\\n#personal-profile div.col > div {\\n    border: 1px solid #ddd;\\n    border-radius: 3px;\\n    padding: 14px; }\\n\\n#personal-profile strong {\\n    line-height: 2px;\\n    padding-left: 4px; }\\n\\n@media only screen and (max-width: 768px) {\\n  #primary-profile-text {\\n    text-align: center; }\\n  #primary-profile-pic {\\n    text-align: center; } }\\n\\n@media only screen and (min-width: 601px) {\\n  #primary-profile-text {\\n    text-align: left;\\n    position: relative;\\n    height: 150px; }\\n    #primary-profile-text div {\\n      position: absolute;\\n      top: 50%;\\n      -webkit-transform: translateY(-50%);\\n              transform: translateY(-50%); } }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { UserService } from \"../service/user.service\"; \nimport { User } from \"../model/User\";\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  public param; \n\n  @Input() user: User; \n\n  constructor(\n    private route: ActivatedRoute, \n    private _user: UserService) { \n\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { User } from '../model/User'; \n\nexport class UserTableDataSource extends DataSource<User> {\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, public data: User[]) {\n    super();\n  }\n\n  connect(): Observable<User[]> {\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n\n  disconnect() {}\n\n  private getPagedData(data: User[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  private getSortedData(data: User[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.first_name, b.first_name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        case 'role': return compare(a.role, b.role, isAsc);\n        case 'gender': return compare(a.gender, b.gender, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<div class=\\\"conatiner\\\" id=\\\"search\\\">\\n  <form id=\\\"registartionForm\\\" class=\\\"container\\\" [formGroup]='searchForm' > \\n      <table>\\n        <tr>\\n          <td style=\\\"width: 75%;\\\">\\n            <mat-form-field>\\n            <input matInput formControlName=\\\"search\\\" placeholder=\\\"Search\\\" class=\\\"browser-default\\\"> \\n            </mat-form-field>\\n          </td>\\n          <td width=\\\"25%\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Filter by role\\\" formControlName=\\\"role\\\">\\n                <mat-option value=\\\"\\\">All</mat-option>\\n                <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.id\\\">\\n                  {{role.name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n  </form>\\n</div>\\n<mat-card style=\\\"padding: 5%\\\" *ngIf=\\\"message.isThere\\\" id=\\\"tableMessage\\\">\\n  <p class=\\\"container align-center larg\\\" [class]=\\\"(message)?.class\\\">{{(message)?.text}}</p>\\n</mat-card>\\n\\n<div class=\\\"mat-elevation-z8\\\" id=\\\"users-table\\\" [hidden]=\\\"(message.isThere)\\\">\\n   \\n  <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- Profile pic  Column -->\\n    <ng-container matColumnDef=\\\"profile_pic\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>profile pic</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><img [src]=\\\"'http://clinic.com/img/'+row.profile_pic\\\" class=\\\"profile-pic circle reponsive-img\\\"/></td>\\n    </ng-container>\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"worker_id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>dWorker Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.worker_id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.first_name + \\\" \\\"+ row.father_name+ \\\" \\\" + row.grand_father_name}}</td>\\n    </ng-container>\\n        \\n    <!-- Role Column -->\\n    <ng-container matColumnDef=\\\"role\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.role}}</td>\\n    </ng-container>\\n\\n    <!-- Gender Column -->\\n    <ng-container matColumnDef=\\\"gender\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Gender</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.gender}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" \\n    [contextMenuTrigger]=\\\"contextMenu\\\" \\n    [menuContext]=\\\"{items: menuItems, data: row }\\\"\\n    (menuAction)=\\\"onContextMenu($event)\\\"\\n    (click)=\\\"userProfile(row)\\\"\\n    ></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[5, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","module.exports = \"#search {\\n  margin-left: 5%;\\n  margin-right: 5%; }\\n  #search .mat-input-element {\\n    font-size: 1.2em;\\n    font-weight: 450; }\\n  #search td {\\n    padding-top: 0px;\\n    padding-bottom: 0px; }\\n  .mat-form-field-wrapper {\\n  margin-bottom: 0px;\\n  padding-bottom: 0px; }\\n  #tableMessage {\\n  padding: 5%;\\n  text-align: center;\\n  font-size: 1.2em; }\\n  .profile-pic {\\n  width: 40px;\\n  padding: 0px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core' ;\nimport { FormGroup, FormBuilder , FormControl,Validators} from '@angular/forms';\nimport { MatPaginator, MatSort } from '@angular/material' ;\nimport { UserTableDataSource } from './user-table-datasource' ;\nimport { UserService } from '../service/user.service' ; \nimport { MatDialog } from '@angular/material' ; \nimport { RegisterationFormComponent } from '../registeration-form/registeration-form.component' ; \nimport { RoleService } from '../service/role.service' ; \nimport { ContextMenuComponent } from '../context-menu/context-menu.component' ; \nimport { UserProfileModalComponent } from '../user-profile-modal/user-profile-modal.component' ;\nimport { AlertComponent } from '../alert/alert.component' ; \nimport { User } from '../model/User' ; \nimport * as S from 'string';\n\n\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.scss']\n})\n\nexport class UserTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator ;\n  @ViewChild(MatSort) sort: MatSort ;\n  dataSource: UserTableDataSource ;\n\n  searchForm: FormGroup;\n  contextMenu = ContextMenuComponent ; \n  message = {\n    isThere: false, \n    class: '',\n    text: '',\n  };\n\n  menuItems = [\n    {icon: 'edit', text: 'Edit'},\n    {icon: 'visibility', text: 'View profile'},\n    {icon: 'delete', text: 'Remove user'},\n  ] ;\n\n  displayedColumns = [\"profile_pic\",'worker_id', 'name', 'role' /*, 'gender' , 'email' , 'phone'*/] ;\n  public roles ; \n  public users: User[] ;\n\n  constructor(\n    public modal: MatDialog, \n    public _roles: RoleService, \n    public _user: UserService,\n    public _formBuilder: FormBuilder){}\n  ngOnInit() {\n    this.dataSource = new UserTableDataSource(this.paginator, this.sort, []) ;\n\n    this._user.getUsers().subscribe(\n      data => {\n        this.users = data ;\n        this.dataSource = new UserTableDataSource(this.paginator, this.sort, data) ;\n      }\n    ) ;\n    this._roles.getRoles().subscribe(\n      result => {\n        this.roles = result ; \n      }\n    )\n\n    this.searchForm = this._formBuilder.group(\n      { \n        search: '',\n        role: '' \n      }\n    );\n    this.searchForm.valueChanges.subscribe(\n      key=>{\n        let filtered;\n\n        if(key.role == '')\n          filtered = this.search(key.search); \n        else\n          filtered = this.search(key.search).filter((v,i,a)=>{return v.role_id == key.role});\n\n        if(filtered.length == 0){\n          this.message = { isThere: true, class: \"danger-text\",text: \"No results found\" }\n        }else{\n          this.message.isThere = false; \n        }\n\n        this.dataSource = new UserTableDataSource(this.paginator, this.sort, filtered) ;\n      }\n    )\n  }\n  search(key){\n      key = key.toLowerCase();\n    let start = this.users.filter((value, inxex,arr)=>{\n      return  S((value.worker_id).toLowerCase()).startsWith(key)||\n              S((value.first_name +\" \"+ value.father_name + \" \" +value.grand_father_name).toLowerCase()).startsWith(key)\n    });\n    let contains = this.users.filter((value, index, arr)=>{     \n      return (S((value.worker_id).toLowerCase()).contains(key)||\n              S((value.first_name + \" \" + value.father_name + \" \" + value.grand_father_name).toLowerCase()).contains(key))\n              &&\n              !(S((value.worker_id).toLowerCase()).startsWith(key)||\n              S((value.first_name +\" \"+ value.father_name + \" \" +value.grand_father_name).toLowerCase()).startsWith(key));\n      });\n    return start.concat(contains); \n  }\n  editUser(responce){\n    let registerDialog = this.modal.open(RegisterationFormComponent,{\n      width: '600px', \n      data: {\n        roles: this.roles,\n        user: responce.data\n      },\n    }) ; \n\n    registerDialog.afterClosed().subscribe(\n      (responce) => {\n        if(responce.responce){\n         \n          let i = this.users.findIndex(function(value: User){ \n            return (responce.data.id == value.id);\n          });\n          this.users[i] = responce.data;\n          this.dataSource = new UserTableDataSource(this.paginator, this.sort, this.users) ;\n        } \n      }\n    ) ;\n  }\n  userProfile($user){\n    return this.modal.open(UserProfileModalComponent,{\n      width: '600px',\n      data: {\n        user: $user\n      },\n    }) ;\n\n    // profileDialog.afterClosed().subscribe(\n    //   responce => {\n    //     console.log(responce) ; \n    //   }\n    // ) ;\n  }\n  removeUser(responce){\n    let deleteDialog = this.modal.open(AlertComponent, {\n      data:{\n        title: \"Remove User\", \n        message: \"Are you shure? Do you want to remove <b>\"+responce.data.first_name+ \" \" +responce.data.father_name + \"</b>\",\n        dialog: \"confirm\",\n        data: responce.data,\n      }\n    }) ; \n\n    deleteDialog.afterClosed().subscribe(\n      confirmed => {\n        if(confirmed.responce){\n          this._user.deleteUser(confirmed.data.id).subscribe(\n            responce => {\n              let newTableData = this.users.filter(function(value, index, arr){\n                return value != confirmed.data; \n              }); \n              this.dataSource = new UserTableDataSource(this.paginator, this.sort, newTableData) ;\n            }\n          ) ; \n        } \n      }\n    )\n  }\n  onContextMenu(responce) {\n    switch(responce.index) {\n      case 0: \n        this.editUser(responce); \n        break ;\n      case 1: \n        this.userProfile(responce); \n      break ; \n      case 2:\n        this.removeUser(responce); \n      break ;\n    } \n  }\n}\n","module.exports = \"<section class=\\\"container\\\">\\n    <app-user-table></app-user-table>\\n</section> \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  onContextMenu(e){\n    console.log(e); \n  }\n}\n","module.exports = \"<section>\\n  <div class=\\\"row\\\" *ngIf=\\\"(hisstory)?true:false\\\">\\n    <div class=\\\"col m8 s12 offset-m2\\\">\\n      <div class=\\\"row\\\">\\n        <mat-card>\\n          <!-- <h5>History</h5> -->\\n          <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                  <h6><strong>Chif complient</strong></h6>\\n                  <p *ngIf=\\\"hisstory.chief_complaint\\\">{{hisstory.chief_complaint}}</p>\\n                  <p *ngIf=\\\"!hisstory.chief_complaint\\\" class=\\\"secondery\\\" style=\\\"opacity: 0.3\\\"><b>No complaint</b></p>\\n              </div>\\n          </div>\\n          <div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col m3\\\">\\n                    <div class=\\\"col s4\\\" style=\\\"margin-top: 16px\\\">\\n                        <img src=\\\"assets/thermometer.svg\\\" style=\\\"width: 3rem; margin-top: 12px\\\"/>\\n                    </div>\\n                    <div class=\\\"col s8\\\" style=\\\"padding-left: 4px\\\">\\n                      <p>Temprature</p>\\n                      <h5 *ngIf=\\\"hisstory.temprature\\\">{{hisstory.temprature}}oC</h5>\\n                      <h6 *ngIf=\\\"!hisstory.temprature\\\" class=\\\"secondery\\\">Not mesured</h6>\\n                    </div>\\n                    \\n                  </div>\\n                  <div class=\\\"col m3\\\">\\n                      <div class=\\\"col s4\\\" style=\\\"margin-top: 16px\\\">\\n                          <img src=\\\"assets/sphygmomanometer.svg\\\" style=\\\"width: 3rem; margin-top: 12px\\\"/>\\n                      </div>\\n                      <div class=\\\"col s8\\\" style=\\\"padding-left: 4px\\\">\\n                        <p>BP</p>\\n                        <h5 *ngIf=\\\"hisstory.BP\\\">{{hisstory.BP}}</h5>\\n                        <h6 *ngIf=\\\"!hisstory.BP\\\" class=\\\"secondery\\\">Not mesured</h6>\\n                      </div>\\n                    \\n                  </div>\\n                  <div class=\\\"col m3\\\">\\n                      <div class=\\\"col s4\\\" style=\\\"margin-top: 16px\\\">\\n                          <img src=\\\"assets/thermometer.svg\\\" style=\\\"width: 3rem; margin-top: 12px\\\"/>\\n                      </div>\\n                      <div class=\\\"col s8\\\" style=\\\"padding-left: 4px\\\">\\n                        <p>Puls rate</p>\\n                        <h5 *ngIf=\\\"hisstory.puls_rate\\\">{{hisstory.puls_rate}}</h5>\\n                        <h6 *ngIf=\\\"!hisstory.puls_rate\\\" class=\\\"secondery\\\">Not mesured</h6>\\n                      </div>                \\n                  </div>\\n                  <div class=\\\"col m3\\\">\\n                      <div class=\\\"col s4\\\" style=\\\"margin-top: 16px\\\">\\n                          <img src=\\\"assets/thermometer.svg\\\" style=\\\"width: 3rem; margin-top: 12px\\\"/>\\n                      </div>\\n                      <div class=\\\"col s8\\\" style=\\\"padding-left: 4px\\\">\\n                        <p>Respiratory rate</p>\\n                        <h5 *ngIf=\\\"hisstory.respiratory_rate\\\">{{hisstory.respiratory_rate}}</h5>\\n                        <h6 *ngIf=\\\"!hisstory.respiratory_rate\\\" class=\\\"secondery\\\">Not mesured</h6>\\n                      </div>\\n                     \\n                  </div>\\n              </div>   \\n          </div>     \\n        </mat-card>\\n      </div>\\n\\n      <div class=\\\"row\\\">  \\n        <mat-card>\\n          <h5>Laboratory results</h5>\\n          <app-lab-result [tests]=\\\"(hisstory)?.labResults\\\"></app-lab-result>\\n        </mat-card>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <mat-card>\\n          <h5>Prescription</h5>\\n          <app-prescription [prescriptions]=\\\"(hisstory)?.prescriptions \\\"></app-prescription>\\n        </mat-card>\\n      </div>\\n       \\n     \\n      \\n    </div>\\n  </div>\\n</section>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Hisstory } from '../model/Hisstory';\nimport { HisstoryService } from '../service/hisstory.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Prescription } from '../model/Prescription';\n\n@Component({\n  selector: 'app-view-hisstory',\n  templateUrl: './view-hisstory.component.html',\n  styleUrls: ['./view-hisstory.component.scss']\n})\nexport class ViewHisstoryComponent implements OnInit {\n\n \n  private displayedColumns = ['name', 'dose', 'root', 'frequency']; \n  private hisstory: Hisstory; \n\n  constructor(private _hisstory: HisstoryService, \n    private _activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this._activeRoute.params.subscribe(\n      param => {\n        this._hisstory.viewHisstroy(param.queue_id).subscribe(\n          (hisstory) => {\n            this.hisstory = hisstory; \n          }\n        ); \n      }\n    )\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Patient_queue } from '../model/Patient_queue'; \n\nexport class VisitsDataSource extends DataSource<Patient_queue> {\n \n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private data: Patient_queue[]) {\n    super();\n  }\n\n  connect(): Observable<Patient_queue[]> {\n  \n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  disconnect() {}\n\n  private getPagedData(data: Patient_queue[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  private getSortedData(data: Patient_queue[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'physician': return compare(\n          a.physician.first_name +\" \"+ a.physician.father_name+\" \"+a.physician.grand_father_name\n          ,b.physician.first_name +\" \"+ b.physician.father_name+\" \"+b.physician.grand_father_name, isAsc);\n        case 'date': return compare(a.date, +b.date, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <mat-card *ngIf=\\\"!(loaded && !error)\\\" class=\\\"container col s12 m8 offset-m2\\\">\\n      <div *ngIf=\\\"!loaded\\\" class=\\\"center\\\">Loading...</div>\\n      <div *ngIf=\\\"error\\\" class=\\\"center danger-text\\\"><b>Some error occured</b></div>\\n    </mat-card>\\n  </div>\\n</div>\\n<div class=\\\"container\\\" [hidden]=\\\"!(loaded && !error)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col m1\\\">\\n      <!-- <button mat-icon-button [routerLink]=\\\"'/hisstory/'+queue_id\\\"><mat-icon>arrow_back</mat-icon></button> -->\\n    </div>\\n    <div class=\\\"mat-elevation-z8 col s12 m10 \\\">\\n      <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n        <!-- number Column -->\\n        <ng-container matColumnDef=\\\"no\\\">\\n          <th mat-header-cell *matHeaderCellDef> No </th>\\n          <td mat-cell *matCellDef=\\\"let hisstory\\\"> {{num(hisstory)}}</td>\\n        </ng-container>\\n\\n        <!-- Id Column -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\\n          <td mat-cell *matCellDef=\\\"let hisstory\\\">{{hisstory.date}}</td>\\n        </ng-container>\\n\\n        <!-- Physician Column -->\\n        <ng-container matColumnDef=\\\"physician\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Physician</th>\\n          <td mat-cell *matCellDef=\\\"let hisstory\\\">{{hisstory.physician.first_name + \\\" \\\"+hisstory.physician.father_name+\\\" \\\"+hisstory.physician.grand_father_name}}</td>\\n        </ng-container>\\n\\n        <!-- Diagnosis Column -->\\n        <ng-container matColumnDef=\\\"diagnosis\\\">\\n          <th mat-header-cell *matHeaderCellDef> Diagnosis </th>\\n          <td mat-cell *matCellDef=\\\"let hisstory\\\"> {{hisstory.diagnosis}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let queue; columns: displayedColumns;\\\"\\n            [routerLink]=\\\"'/view/hisstroy/'+queue.id\\\"></tr>\\n      </table>\\n\\n      <mat-paginator #paginator\\n        [length]=\\\"dataSource.data.length\\\"\\n        [pageIndex]=\\\"0\\\"\\n        [pageSize]=\\\"50\\\"\\n        [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n      </mat-paginator>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { VisitsDataSource } from './visits-datasource';\nimport { PatientQueueService } from '../service/patient-queue.service'; \nimport { ActivatedRoute } from '@angular/router';\nimport { Patient_queue } from '../model/Patient_queue';\n\n@Component({\n  selector: 'app-visits',\n  templateUrl: './visits.component.html',\n  styleUrls: ['./visits.component.css']\n})\nexport class VisitsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: VisitsDataSource;\n\n  displayedColumns = ['no', 'date', 'physician', 'diagnosis'];\n  private loaded = false; \n  private error = false; \n  private hisstories: Patient_queue[] = [];\n  \n  constructor(private _queue: PatientQueueService, private _activeRoute:ActivatedRoute){}\n  ngOnInit() {\n    this.dataSource = new VisitsDataSource(this.paginator, this.sort , []);\n    this._activeRoute.params.subscribe(\n      (param) => {\n        this._queue.visits(param.reg_id).subscribe(\n          responce => {\n            this.dataSource = new VisitsDataSource(this.paginator, this.sort, responce); \n            this.loaded = true; \n            this.error = false; \n            this.hisstories = responce; \n          }, \n          error => {\n            this.loaded = true; \n            this.error = true; \n          }\n        )\n      }\n    )\n  }\n\n  num(hisstory){\n    return this.hisstories.indexOf(hisstory)+1; \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core';\n\nimport { ActiveContextMenuSub } from './context-menu.service';\n\nexport class MenuPackage {\n  constructor(public menu: ActiveContextMenuSub, public context: any) {}\n}\n\nexport class MenuInjector implements Injector {\n  _menuContext: MenuPackage;\n  constructor(\n    private _activeContextMenu: ActiveContextMenuSub,\n    private _parentInjector: Injector,\n    private context: any,\n  ) {\n    this._menuContext = new MenuPackage(_activeContextMenu, context);\n  }\n\n  get<T>(token: any, notFoundValue?: T, flags?: InjectFlags): T | MenuPackage {\n    if (token === MenuPackage) {\n      return this._menuContext;\n    }\n    return this._parentInjector.get<T>(token, notFoundValue, flags);\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { ContextMenuService, ActiveContextMenu } from './context-menu.service';\n\n@Directive({\n  selector: '[contextMenuTrigger]',\n  exportAs: 'contextMenuTrigger',\n})\nexport class ContextMenuTriggerDirective implements OnDestroy, OnInit {\n  @Input() contextMenuTrigger: any;\n  @Input() menuContext: any;\n  @Input() holdToDisplay = 1000;\n  @Output() menuAction = new EventEmitter<any>();\n  @Output() menuClose = new EventEmitter<void>();\n  menu: ActiveContextMenu;\n  visible = false;\n  private mouseDownTimeoutId: any;\n  private sub: Subscription;\n\n  @HostListener('contextmenu', ['$event'])\n  handleMenu($event: MouseEvent) {\n    $event.preventDefault();\n    this.menu = this.contextMenuService.show(\n      $event,\n      this.contextMenuTrigger,\n      this.menuContext,\n      this.menuClose,\n      this.menuAction,\n    );\n    this.visible = true;\n  }\n\n  @HostListener('touchstart', ['$event'])\n  handleMouseDown($event: any) {\n    if (this.holdToDisplay >= 0) {\n      $event.stopPropagation();\n      $event.clientY = $event.touches[0].clientY;\n      $event.clientX = $event.touches[0].clientX;\n\n      this.mouseDownTimeoutId = setTimeout(\n        () => this.handleMenu($event),\n        this.holdToDisplay,\n      );\n    }\n  }\n\n  @HostListener('touchend')\n  handleMouseUp() {\n    clearTimeout(this.mouseDownTimeoutId);\n  }\n\n  constructor(private contextMenuService: ContextMenuService) {}\n\n  ngOnInit() {\n    this.sub = this.menuClose.subscribe(() => this.visible = false);\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { ContextMenuTriggerDirective } from './context-menu-trigger.directive';\nimport { ContextSubmenuTriggerDirective } from './context-submenu-trigger.directive';\nimport { MenuComponent } from './menu.component';\n\n@NgModule({\n  declarations: [\n    ContextMenuTriggerDirective,\n    ContextSubmenuTriggerDirective,\n    MenuComponent,\n  ],\n  exports: [ContextMenuTriggerDirective, ContextSubmenuTriggerDirective],\n  imports: [PortalModule, OverlayModule],\n})\nexport class ContextMenuModule {}\n","import {\n  Overlay,\n  OverlayRef,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ElementRef, Injectable, Injector, EventEmitter } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { MenuInjector } from './context-menu-injector';\n\nexport interface ActiveContextMenuSub {\n  id: number;\n  isTriggerHovered: BehaviorSubject<boolean>;\n  isMenuHovered: BehaviorSubject<boolean>;\n  submenu: boolean;\n}\nexport interface ActiveContextMenu extends ActiveContextMenuSub {\n  overlayRef: OverlayRef;\n  component: any;\n  menuClose: EventEmitter<void>;\n  menuAction: EventEmitter<any>;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ContextMenuService {\n  menus: ActiveContextMenu[] = [];\n  id = 0;\n\n  constructor(\n    private overlay: Overlay,\n    private scrollStrategy: ScrollStrategyOptions,\n    private _injector: Injector,\n  ) {}\n\n  /**\n   *\n   * @param $event triggering event\n   * @param menuComponent the component to be shown\n   * @param submenu is a menu within a menu\n   * @param level if submenu, what level\n   */\n  show(\n    $event: MouseEvent,\n    menuComponent,\n    context: any,\n    menuClose: EventEmitter<any>,\n    menuAction: EventEmitter<any>,\n    submenu = false,\n    level?: number,\n  ): ActiveContextMenu {\n    let target: any;\n    if (!submenu) {\n      this.closeAll();\n      target = {\n        getBoundingClientRect: (): ClientRect => ({\n          bottom: $event.clientY,\n          height: 0,\n          left: $event.clientX,\n          right: $event.clientX,\n          top: $event.clientY,\n          width: 0,\n        }),\n      };\n    } else {\n      // close other submenus\n      this.closeAll(undefined, level);\n      target = $event.target;\n    }\n    const el = new ElementRef(target);\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(el)\n      .withFlexibleDimensions(false);\n\n    if (!submenu) {\n      positionStrategy.withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top',\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'top',\n        },\n        {\n          originX: 'end',\n          originY: 'center',\n          overlayX: 'start',\n          overlayY: 'center',\n        },\n        {\n          originX: 'start',\n          originY: 'center',\n          overlayX: 'end',\n          overlayY: 'center',\n        },\n      ]);\n    } else {\n      positionStrategy.withPositions([\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'top',\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        },\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'bottom',\n        },\n      ]);\n    }\n    const t: ActiveContextMenuSub = {\n      submenu,\n      id: this.id++,\n      isMenuHovered: new BehaviorSubject(false),\n      isTriggerHovered: new BehaviorSubject(false),\n    };\n    const menuInjector = new MenuInjector(t, this._injector, context);\n    const componentPortal = new ComponentPortal(\n      menuComponent,\n      undefined,\n      menuInjector,\n    );\n    const overlayRef = this.overlay.create({\n      positionStrategy,\n      panelClass: 'ngx-contextmenu',\n      scrollStrategy: this.scrollStrategy.close(),\n    });\n    const component = overlayRef.attach<any>(componentPortal);\n    const res = { overlayRef, component, ...t, menuClose, menuAction };\n    this.menus.push(res);\n    return res;\n  }\n  getCurrentLevel() {\n    return this.menus.length;\n  }\n  closeAll(context?: any, idx = 0) {\n    for (let index = idx; index < this.menus.length; index++) {\n      const menu = this.menus[index];\n      this.destroyMenu(menu, context);\n    }\n    this.menus.splice(idx, this.menus.length);\n  }\n  destroyMenu(menu: ActiveContextMenu, context?: any) {\n    menu.component.instance._state = 'exit';\n    if (menu.component.instance.lazy) {\n      menu.component.instance._animationDone\n        .pipe(\n          filter((event: any) => event.toState === 'exit'),\n          take(1),\n        )\n        .subscribe(() => {\n          menu.overlayRef.detach();\n          menu.overlayRef.dispose();\n        });\n    } else {\n      menu.overlayRef.detach();\n      menu.overlayRef.dispose();\n    }\n    if (context) {\n      menu.menuAction.next(context);\n    }\n    menu.menuClose.next();\n  }\n  close(menu: ActiveContextMenu, menuIndex: number, context?: any) {\n    this.destroyMenu(menu, context);\n    this.menus.splice(menuIndex, 1);\n  }\n  checkOutsideClick($event: MouseEvent) {\n    for (const m of this.menus) {\n      const clickedInside = m.component.location.nativeElement.contains(\n        $event.target,\n      );\n      if (clickedInside) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return;\n      }\n    }\n    this.closeAll();\n  }\n  closeSubMenu(id: number): void {\n    const menuIndex = this.menus.findIndex(n => n.id === id);\n    if (menuIndex === -1 || menuIndex !== this.menus.length - 1) {\n      return;\n    }\n    // make sure we can close the current menu\n    const menu = this.menus[menuIndex];\n    if (menu.isMenuHovered.getValue() || menu.isTriggerHovered.getValue()) {\n      return;\n    }\n    // close all menus up if possible\n    for (let index = this.menus.length - 1; index >= 1; index--) {\n      const m = this.menus[index];\n      if (!m.isMenuHovered.getValue() && !m.isTriggerHovered.getValue()) {\n        this.close(m, index);\n      } else {\n        return;\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport {\n  ActiveContextMenu,\n  ContextMenuService,\n} from './context-menu.service';\n\n@Directive({ selector: '[contextSubmenuTrigger]' })\nexport class ContextSubmenuTriggerDirective implements OnDestroy {\n  @Input() hoverDelay = 500;\n  @Input() openDelay = 200;\n  @Input() contextSubmenuTrigger: any;\n  @Input() menuContext: any;\n  @Output() menuAction = new EventEmitter<any>();\n  @Output() menuClose = new EventEmitter<void>();\n  menu: ActiveContextMenu;\n  opentimer: any;\n  closetimer: any;\n  visible = false;\n  level = 1;\n\n  @HostListener('click', ['$event', 'true'])\n  handleSubMenuClick($event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.opentimer);\n    clearTimeout(this.closetimer);\n    this.menu = this.contextMenuService.show(\n      $event,\n      this.contextSubmenuTrigger,\n      this.menuContext,\n      this.menuClose,\n      this.menuAction,\n      true,\n      this.level,\n    );\n    this.visible = true;\n  }\n\n  @HostListener('mouseover', ['$event'])\n  handleSubMenuEnter($event: MouseEvent) {\n    if (this.menu) {\n      this.menu.isTriggerHovered.next(true);\n    }\n    clearTimeout(this.closetimer);\n    this.opentimer = setTimeout(() => {\n      this.menu = this.contextMenuService.show(\n        $event,\n        this.contextSubmenuTrigger,\n        this.menuContext,\n        this.menuClose,\n        this.menuAction,\n        true,\n        this.level,\n      );\n      this.visible = true;\n      this.opentimer = null;\n    }, this.openDelay);\n  }\n\n  /**\n   * submenu hides after cursor has exited for a period of time\n   */\n  @HostListener('mouseout', ['$event'])\n  handleSubMenuExit() {\n    clearTimeout(this.opentimer);\n    if (this.menu) {\n      this.menu.isTriggerHovered.next(false);\n    }\n    this.closetimer = setTimeout(() => {\n      if (this.menu) {\n        this.menu.isTriggerHovered.next(false);\n        this.contextMenuService.closeSubMenu(this.menu.id);\n        this.menu = undefined;\n      }\n      this.visible = false;\n    }, this.hoverDelay);\n  }\n\n  constructor(private contextMenuService: ContextMenuService) {\n    // get current level\n    setTimeout(() => (this.level = this.contextMenuService.getCurrentLevel()));\n  }\n\n  /**\n   * if overwritten make sure to clear timeouts\n   */\n  ngOnDestroy() {\n    clearTimeout(this.opentimer);\n    clearTimeout(this.closetimer);\n  }\n}\n","import { Component, HostListener } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\n\nimport { ContextMenuService } from './context-menu.service';\nimport { MenuPackage } from './context-menu-injector';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-menu',\n  template: ``,\n})\nexport class MenuComponent {\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n  _animationDone = new Subject<AnimationEvent>();\n  /** set lazy to False if you do not have animations */\n  lazy = true;\n  closetimer: any;\n\n  @HostListener('mouseover')\n  handleMouseover() {\n    if (!this.menuPackage.menu.submenu) {\n      return;\n    }\n    this.menuPackage.menu.isMenuHovered.next(true);\n    clearTimeout(this.closetimer);\n  }\n\n  @HostListener('mouseleave')\n  handleMouseleave() {\n    if (!this.menuPackage.menu.submenu) {\n      return;\n    }\n    this.menuPackage.menu.isMenuHovered.next(false);\n    this.closetimer = setTimeout(() => {\n      this.contextMenuService.closeSubMenu(this.menuPackage.menu.id);\n    }, 500);\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleWindowClick($event: MouseEvent) {\n    this.contextMenuService.checkOutsideClick($event);\n  }\n\n  constructor(\n    public menuPackage: MenuPackage,\n    public contextMenuService: ContextMenuService,\n  ) {}\n\n  /** Callback that is invoked when the menu animation completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    this._animationDone.next(event);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}